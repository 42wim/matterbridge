// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-11-05 04:31:47.316226 +0800 CST m=+0.167027083

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "A read/write API for the Matterbridge chat bridge.",
        "title": "Matterbridge API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "https://github.com/42wim/matterbridge/blob/master/LICENSE"
        }
    },
    "basePath": "/api",
    "paths": {
        "/message": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create/Update a message",
                "parameters": [
                    {
                        "description": "Message object to create",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/config.Message"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "List of new messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/config.Message"
                            }
                        }
                    }
                }
            }
        },
        "/stream": {
            "get": {
                "produces": [
                    "application/x-json-stream"
                ],
                "summary": "Streams realtime messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/config.Message"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.Message": {
            "type": "object",
            "properties": {
                "account": {
                    "description": "Unique account name of format \"\u003cprotocol\u003e.\u003cslug\u003e\"\n",
                    "type": "string",
                    "example": "slack.myteam"
                },
                "avatar": {
                    "description": "URL to an avatar image\n",
                    "type": "string",
                    "example": "https://secure.gravatar.com/avatar/1234567890abcdef1234567890abcdef.jpg"
                },
                "channel": {
                    "description": "Human-readable channel name\n",
                    "type": "string",
                    "example": "test-channel"
                },
                "event": {
                    "description": "Can be blank.\n",
                    "type": "string"
                },
                "extra": {
                    "description": "Extra data that doesn't fit in other fields. Used for processing incoming messages.\n",
                    "type": "object"
                },
                "gateway": {
                    "description": "Name of the gateway\n",
                    "type": "string",
                    "example": "test-channel-gateway"
                },
                "id": {
                    "description": "Unique ID of message on the gateway\n",
                    "type": "string",
                    "example": "slack 1541361213.030700"
                },
                "protocol": {
                    "description": "Chat protocol of incoming message\n",
                    "type": "string",
                    "example": "slack"
                },
                "text": {
                    "description": "Content of the message\n",
                    "type": "string",
                    "example": "Testing, testing, 1-2-3."
                },
                "timestamp": {
                    "type": "string",
                    "example": "1541361213.030700"
                },
                "userid": {
                    "description": "userid on the bridge\n",
                    "type": "string",
                    "example": "U4MCXJKNC"
                },
                "username": {
                    "description": "Human-readable username\n",
                    "type": "string",
                    "example": "alice"
                }
            }
        }
    },
    "securityDefinitions": {
        "": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
