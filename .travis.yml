language: go
go:
    - 1.11.x

# we have everything vendored
install: true

git:
  depth: 200

env:
    - GOOS=linux GOARCH=amd64
      #    - GOOS=windows GOARCH=amd64
      #- GOOS=linux GOARCH=arm

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
    - go: tip
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

notifications:
      email: false

before_script:
  - MY_VERSION=$(git describe --tags)
#  - GO_FILES=$(find . -iname '*.go' | grep -v /vendor/)  # All the .go files, excluding vendor/
  - PKGS=$(go list ./... | grep -v /vendor/)             # All the import paths, excluding vendor/
#  - go get github.com/golang/lint/golint                 # Linter
#- go get honnef.co/go/tools/cmd/megacheck              # Badass static analyzer/linter
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v1.12.2


# Anything in before_script: that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash. 
script:
  #- test -z "$(go fmt ./...)"         # Fail if a .go file hasn't been formatted with gofmt
  - go test -v -race $PKGS            # Run all the tests with the race detector enabled
  #- go vet $PKGS                      # go vet is the official Go static analyzer
  - golangci-lint run --enable-all -D lll -D errcheck -D gosec -D maligned -D prealloc -D gocyclo -D gochecknoglobals
  #- megacheck $PKGS                   # "go vet on steroids" + linter
  - /bin/bash ci/bintray.sh
  #- golint -set_exit_status $PKGS     # one last linter

deploy:
  provider: bintray
  edge:
    branch: v1.8.47
  file: ci/deploy.json
  user: 42wim
  key:
     secure: "CeXXe6JOmt7HYR81MdWLua0ltQHhDdkIeRGBFbgd7hkb1wi8eF9DgpAcQrTso8NIlHNZmSAP46uhFgsRvkuezzX0ygalZ7DCJyAyn3sAMEh+UQSHV1WGThRehTtidqRGjetzsIGSwdrJOWil+XTfbO1Z8DGzfakhSuAZka8CM4BAoe3YeP9rYK8h+84x0GHfczvsLtXZ3mWLvQuwe4pK6+ItBCUg0ae7O7ZUpWHy0xQQkkWztY/6RAzXfaG7DuGjIw+20fhx3WOXRNpHCtZ6Bc3qERCpk0s1HhlQWlrN9wDaFTBWYwlvSnNgvxxMbNXJ6RrRJ0l0bA7FUswYwyroxhzrGLdzWDg8dHaQkypocngdalfhpsnoO9j3ApJhomUFJ3UoEq5nOGRUrKn8MPi+dP0zE4kNQ3e4VNa1ufNrvfpWolMg3xh8OXuhQdD5wIM5zFAbRJLqWSCVAjPq4DDPecmvXBOlIial7oa312lN5qnBnUjvAcxszZ+FUyDHT1Grxzna4tMwxY9obPzZUzm7359AOCCwIQFVB8GLqD2nwIstcXS0zGRz+fhviPipHuBa02q5bGUZwmkvrSNab0s8Jo7pCrel2Rz3nWPKaiCfq2WjbW1CLheSMkOQrjsdUd1hhbqNWFPUjJPInTc77NAKCfm5runv5uyowRLh4NNd0sI="
