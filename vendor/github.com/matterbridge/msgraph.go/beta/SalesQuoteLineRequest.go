// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// SalesQuoteLineRequestBuilder is request builder for SalesQuoteLine
type SalesQuoteLineRequestBuilder struct{ BaseRequestBuilder }

// Request returns SalesQuoteLineRequest
func (b *SalesQuoteLineRequestBuilder) Request() *SalesQuoteLineRequest {
	return &SalesQuoteLineRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SalesQuoteLineRequest is request for SalesQuoteLine
type SalesQuoteLineRequest struct{ BaseRequest }

// Get performs GET request for SalesQuoteLine
func (r *SalesQuoteLineRequest) Get(ctx context.Context) (resObj *SalesQuoteLine, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SalesQuoteLine
func (r *SalesQuoteLineRequest) Update(ctx context.Context, reqObj *SalesQuoteLine) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SalesQuoteLine
func (r *SalesQuoteLineRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// Account is navigation property
func (b *SalesQuoteLineRequestBuilder) Account() *AccountRequestBuilder {
	bb := &AccountRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/account"
	return bb
}

// Item is navigation property
func (b *SalesQuoteLineRequestBuilder) Item() *ItemRequestBuilder {
	bb := &ItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/item"
	return bb
}
