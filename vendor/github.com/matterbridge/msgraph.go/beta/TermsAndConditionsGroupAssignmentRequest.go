// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// TermsAndConditionsGroupAssignmentRequestBuilder is request builder for TermsAndConditionsGroupAssignment
type TermsAndConditionsGroupAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns TermsAndConditionsGroupAssignmentRequest
func (b *TermsAndConditionsGroupAssignmentRequestBuilder) Request() *TermsAndConditionsGroupAssignmentRequest {
	return &TermsAndConditionsGroupAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TermsAndConditionsGroupAssignmentRequest is request for TermsAndConditionsGroupAssignment
type TermsAndConditionsGroupAssignmentRequest struct{ BaseRequest }

// Get performs GET request for TermsAndConditionsGroupAssignment
func (r *TermsAndConditionsGroupAssignmentRequest) Get(ctx context.Context) (resObj *TermsAndConditionsGroupAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TermsAndConditionsGroupAssignment
func (r *TermsAndConditionsGroupAssignmentRequest) Update(ctx context.Context, reqObj *TermsAndConditionsGroupAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TermsAndConditionsGroupAssignment
func (r *TermsAndConditionsGroupAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// TermsAndConditions is navigation property
func (b *TermsAndConditionsGroupAssignmentRequestBuilder) TermsAndConditions() *TermsAndConditionsRequestBuilder {
	bb := &TermsAndConditionsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/termsAndConditions"
	return bb
}
