// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// WorkbookChartGridlinesRequestBuilder is request builder for WorkbookChartGridlines
type WorkbookChartGridlinesRequestBuilder struct{ BaseRequestBuilder }

// Request returns WorkbookChartGridlinesRequest
func (b *WorkbookChartGridlinesRequestBuilder) Request() *WorkbookChartGridlinesRequest {
	return &WorkbookChartGridlinesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WorkbookChartGridlinesRequest is request for WorkbookChartGridlines
type WorkbookChartGridlinesRequest struct{ BaseRequest }

// Get performs GET request for WorkbookChartGridlines
func (r *WorkbookChartGridlinesRequest) Get(ctx context.Context) (resObj *WorkbookChartGridlines, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WorkbookChartGridlines
func (r *WorkbookChartGridlinesRequest) Update(ctx context.Context, reqObj *WorkbookChartGridlines) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WorkbookChartGridlines
func (r *WorkbookChartGridlinesRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// Format is navigation property
func (b *WorkbookChartGridlinesRequestBuilder) Format() *WorkbookChartGridlinesFormatRequestBuilder {
	bb := &WorkbookChartGridlinesFormatRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/format"
	return bb
}
