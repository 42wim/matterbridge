// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// WindowsFirewallRule undocumented
type WindowsFirewallRule struct {
	// Object is the base model of WindowsFirewallRule
	Object
	// DisplayName The display name of the rule. Does not need to be unique.
	DisplayName *string `json:"displayName,omitempty"`
	// Description The description of the rule.
	Description *string `json:"description,omitempty"`
	// PackageFamilyName The package family name of a Microsoft Store application that's affected by the firewall rule.
	PackageFamilyName *string `json:"packageFamilyName,omitempty"`
	// FilePath The full file path of an app that's affected by the firewall rule.
	FilePath *string `json:"filePath,omitempty"`
	// ServiceName The name used in cases when a service, not an application, is sending or receiving traffic.
	ServiceName *string `json:"serviceName,omitempty"`
	// Protocol 0-255 number representing the IP protocol (TCP = 6, UDP = 17). If not specified, the default is All. Valid values 0 to 255
	Protocol *int `json:"protocol,omitempty"`
	// LocalPortRanges List of local port ranges. For example, "100-120", "200", "300-320". If not specified, the default is All.
	LocalPortRanges []string `json:"localPortRanges,omitempty"`
	// RemotePortRanges List of remote port ranges. For example, "100-120", "200", "300-320". If not specified, the default is All.
	RemotePortRanges []string `json:"remotePortRanges,omitempty"`
	// LocalAddressRanges List of local addresses covered by the rule. Default is any address. Valid tokens include:<ul><li>"*" indicates any local address. If present, this must be the only token included.</li><li>A subnet can be specified using either the subnet mask or network prefix notation. If neither a subnet mask nor a network prefix is specified, the subnet mask defaults to 255.255.255.255.</li><li>A valid IPv6 address.</li><li>An IPv4 address range in the format of "start address - end address" with no spaces included.</li><li>An IPv6 address range in the format of "start address - end address" with no spaces included.</li></ul>
	LocalAddressRanges []string `json:"localAddressRanges,omitempty"`
	// RemoteAddressRanges List of tokens specifying the remote addresses covered by the rule. Tokens are case insensitive. Default is any address. Valid tokens include:<ul><li>"*" indicates any remote address. If present, this must be the only token included.</li><li>"Defaultgateway"</li><li>"DHCP"</li><li>"DNS"</li><li>"WINS"</li><li>"Intranet" (supported on Windows versions 1809+)</li><li>"RmtIntranet" (supported on Windows versions 1809+)</li><li>"Internet" (supported on Windows versions 1809+)</li><li>"Ply2Renders" (supported on Windows versions 1809+)</li><li>"LocalSubnet" indicates any local address on the local subnet.</li><li>A subnet can be specified using either the subnet mask or network prefix notation. If neither a subnet mask nor a network prefix is specified, the subnet mask defaults to 255.255.255.255.</li><li>A valid IPv6 address.</li><li>An IPv4 address range in the format of "start address - end address" with no spaces included.</li><li>An IPv6 address range in the format of "start address - end address" with no spaces included.</li></ul>
	RemoteAddressRanges []string `json:"remoteAddressRanges,omitempty"`
	// ProfileTypes Specifies the profiles to which the rule belongs. If not specified, the default is All.
	ProfileTypes *WindowsFirewallRuleNetworkProfileTypes `json:"profileTypes,omitempty"`
	// Action The action the rule enforces. If not specified, the default is Allowed.
	Action *StateManagementSetting `json:"action,omitempty"`
	// TrafficDirection The traffic direction that the rule is enabled for. If not specified, the default is Out.
	TrafficDirection *WindowsFirewallRuleTrafficDirectionType `json:"trafficDirection,omitempty"`
	// InterfaceTypes The interface types of the rule.
	InterfaceTypes *WindowsFirewallRuleInterfaceTypes `json:"interfaceTypes,omitempty"`
	// EdgeTraversal Indicates whether edge traversal is enabled or disabled for this rule. The EdgeTraversal setting indicates that specific inbound traffic is allowed to tunnel through NATs and other edge devices using the Teredo tunneling technology. In order for this setting to work correctly, the application or service with the inbound firewall rule needs to support IPv6. The primary application of this setting allows listeners on the host to be globally addressable through a Teredo IPv6 address. New rules have the EdgeTraversal property disabled by default.
	EdgeTraversal *StateManagementSetting `json:"edgeTraversal,omitempty"`
	// LocalUserAuthorizations Specifies the list of authorized local users for the app container. This is a string in Security Descriptor Definition Language (SDDL) format.
	LocalUserAuthorizations *string `json:"localUserAuthorizations,omitempty"`
}
