// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// WorkbookPivotTableRequestBuilder is request builder for WorkbookPivotTable
type WorkbookPivotTableRequestBuilder struct{ BaseRequestBuilder }

// Request returns WorkbookPivotTableRequest
func (b *WorkbookPivotTableRequestBuilder) Request() *WorkbookPivotTableRequest {
	return &WorkbookPivotTableRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WorkbookPivotTableRequest is request for WorkbookPivotTable
type WorkbookPivotTableRequest struct{ BaseRequest }

// Get performs GET request for WorkbookPivotTable
func (r *WorkbookPivotTableRequest) Get(ctx context.Context) (resObj *WorkbookPivotTable, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WorkbookPivotTable
func (r *WorkbookPivotTableRequest) Update(ctx context.Context, reqObj *WorkbookPivotTable) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WorkbookPivotTable
func (r *WorkbookPivotTableRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// Worksheet is navigation property
func (b *WorkbookPivotTableRequestBuilder) Worksheet() *WorkbookWorksheetRequestBuilder {
	bb := &WorkbookWorksheetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/worksheet"
	return bb
}
