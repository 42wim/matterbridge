// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.17.3
// source: emote/v1/types.proto

package emotev1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Data for a single pack of emotes.
type EmotePack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the pack.
	PackId uint64 `protobuf:"varint,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
	// The ID of the user who created the pack.
	PackOwner uint64 `protobuf:"varint,2,opt,name=pack_owner,json=packOwner,proto3" json:"pack_owner,omitempty"`
	// The name of the pack.
	PackName string `protobuf:"bytes,3,opt,name=pack_name,json=packName,proto3" json:"pack_name,omitempty"`
}

func (x *EmotePack) Reset() {
	*x = EmotePack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmotePack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmotePack) ProtoMessage() {}

func (x *EmotePack) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmotePack.ProtoReflect.Descriptor instead.
func (*EmotePack) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *EmotePack) GetPackId() uint64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

func (x *EmotePack) GetPackOwner() uint64 {
	if x != nil {
		return x.PackOwner
	}
	return 0
}

func (x *EmotePack) GetPackName() string {
	if x != nil {
		return x.PackName
	}
	return ""
}

// Data for a single emote.
type Emote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The image ID of the emote. This is the ID of the image in the image store
	// (same place attachments are stored).
	ImageId string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// The name of the emote.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Emote) Reset() {
	*x = Emote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emote) ProtoMessage() {}

func (x *Emote) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emote.ProtoReflect.Descriptor instead.
func (*Emote) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *Emote) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Emote) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Used in the `CreateEmotePack` endpoint.
type CreateEmotePackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the pack.
	PackName string `protobuf:"bytes,1,opt,name=pack_name,json=packName,proto3" json:"pack_name,omitempty"`
}

func (x *CreateEmotePackRequest) Reset() {
	*x = CreateEmotePackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmotePackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmotePackRequest) ProtoMessage() {}

func (x *CreateEmotePackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmotePackRequest.ProtoReflect.Descriptor instead.
func (*CreateEmotePackRequest) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *CreateEmotePackRequest) GetPackName() string {
	if x != nil {
		return x.PackName
	}
	return ""
}

// Used in the `CreateEmotePack` endpoint.
type CreateEmotePackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the pack.
	PackId uint64 `protobuf:"varint,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
}

func (x *CreateEmotePackResponse) Reset() {
	*x = CreateEmotePackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmotePackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmotePackResponse) ProtoMessage() {}

func (x *CreateEmotePackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmotePackResponse.ProtoReflect.Descriptor instead.
func (*CreateEmotePackResponse) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *CreateEmotePackResponse) GetPackId() uint64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

// Used in the `GetEmotePacks` endpoint.
type GetEmotePacksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEmotePacksRequest) Reset() {
	*x = GetEmotePacksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmotePacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmotePacksRequest) ProtoMessage() {}

func (x *GetEmotePacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmotePacksRequest.ProtoReflect.Descriptor instead.
func (*GetEmotePacksRequest) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{4}
}

// Used in the `GetEmotePacks` endpoint.
type GetEmotePacksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of emote packs.
	Packs []*EmotePack `protobuf:"bytes,1,rep,name=packs,proto3" json:"packs,omitempty"`
}

func (x *GetEmotePacksResponse) Reset() {
	*x = GetEmotePacksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmotePacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmotePacksResponse) ProtoMessage() {}

func (x *GetEmotePacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmotePacksResponse.ProtoReflect.Descriptor instead.
func (*GetEmotePacksResponse) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{5}
}

func (x *GetEmotePacksResponse) GetPacks() []*EmotePack {
	if x != nil {
		return x.Packs
	}
	return nil
}

// Used in the `GetEmotes` endpoint.
type GetEmotePackEmotesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the pack.
	PackId uint64 `protobuf:"varint,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
}

func (x *GetEmotePackEmotesRequest) Reset() {
	*x = GetEmotePackEmotesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmotePackEmotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmotePackEmotesRequest) ProtoMessage() {}

func (x *GetEmotePackEmotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmotePackEmotesRequest.ProtoReflect.Descriptor instead.
func (*GetEmotePackEmotesRequest) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{6}
}

func (x *GetEmotePackEmotesRequest) GetPackId() uint64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

// Used in the `GetEmotes` endpoint.
type GetEmotePackEmotesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of emotes in the pack.
	Emotes []*Emote `protobuf:"bytes,1,rep,name=emotes,proto3" json:"emotes,omitempty"`
}

func (x *GetEmotePackEmotesResponse) Reset() {
	*x = GetEmotePackEmotesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmotePackEmotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmotePackEmotesResponse) ProtoMessage() {}

func (x *GetEmotePackEmotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmotePackEmotesResponse.ProtoReflect.Descriptor instead.
func (*GetEmotePackEmotesResponse) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{7}
}

func (x *GetEmotePackEmotesResponse) GetEmotes() []*Emote {
	if x != nil {
		return x.Emotes
	}
	return nil
}

// Used in the `AddEmoteToPack` endpoint.
type AddEmoteToPackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the pack.
	PackId uint64 `protobuf:"varint,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
	// The emote to add.
	Emote *Emote `protobuf:"bytes,2,opt,name=emote,proto3" json:"emote,omitempty"`
}

func (x *AddEmoteToPackRequest) Reset() {
	*x = AddEmoteToPackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEmoteToPackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmoteToPackRequest) ProtoMessage() {}

func (x *AddEmoteToPackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmoteToPackRequest.ProtoReflect.Descriptor instead.
func (*AddEmoteToPackRequest) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{8}
}

func (x *AddEmoteToPackRequest) GetPackId() uint64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

func (x *AddEmoteToPackRequest) GetEmote() *Emote {
	if x != nil {
		return x.Emote
	}
	return nil
}

// Used in the `AddEmoteToPack` endpoint.
type AddEmoteToPackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddEmoteToPackResponse) Reset() {
	*x = AddEmoteToPackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEmoteToPackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmoteToPackResponse) ProtoMessage() {}

func (x *AddEmoteToPackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmoteToPackResponse.ProtoReflect.Descriptor instead.
func (*AddEmoteToPackResponse) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{9}
}

// Used in the `DeleteEmoteFromPack` endpoint.
type DeleteEmoteFromPackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the pack.
	PackId uint64 `protobuf:"varint,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
	// The name of the emote to delete.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteEmoteFromPackRequest) Reset() {
	*x = DeleteEmoteFromPackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmoteFromPackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmoteFromPackRequest) ProtoMessage() {}

func (x *DeleteEmoteFromPackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmoteFromPackRequest.ProtoReflect.Descriptor instead.
func (*DeleteEmoteFromPackRequest) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteEmoteFromPackRequest) GetPackId() uint64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

func (x *DeleteEmoteFromPackRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Used in the `DeleteEmoteFromPack` endpoint.
type DeleteEmoteFromPackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEmoteFromPackResponse) Reset() {
	*x = DeleteEmoteFromPackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmoteFromPackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmoteFromPackResponse) ProtoMessage() {}

func (x *DeleteEmoteFromPackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmoteFromPackResponse.ProtoReflect.Descriptor instead.
func (*DeleteEmoteFromPackResponse) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{11}
}

// Used in the `DeleteEmotePack` endpoint.
type DeleteEmotePackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the pack.
	PackId uint64 `protobuf:"varint,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
}

func (x *DeleteEmotePackRequest) Reset() {
	*x = DeleteEmotePackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmotePackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmotePackRequest) ProtoMessage() {}

func (x *DeleteEmotePackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmotePackRequest.ProtoReflect.Descriptor instead.
func (*DeleteEmotePackRequest) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteEmotePackRequest) GetPackId() uint64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

// Used in the `DeleteEmotePack` endpoint.
type DeleteEmotePackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEmotePackResponse) Reset() {
	*x = DeleteEmotePackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmotePackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmotePackResponse) ProtoMessage() {}

func (x *DeleteEmotePackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmotePackResponse.ProtoReflect.Descriptor instead.
func (*DeleteEmotePackResponse) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{13}
}

// Used in the `DequipEmotePack` endpoint.
type DequipEmotePackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the pack.
	PackId uint64 `protobuf:"varint,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
}

func (x *DequipEmotePackRequest) Reset() {
	*x = DequipEmotePackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DequipEmotePackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequipEmotePackRequest) ProtoMessage() {}

func (x *DequipEmotePackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequipEmotePackRequest.ProtoReflect.Descriptor instead.
func (*DequipEmotePackRequest) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{14}
}

func (x *DequipEmotePackRequest) GetPackId() uint64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

// Used in the `DequipEmotePack` endpoint.
type DequipEmotePackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DequipEmotePackResponse) Reset() {
	*x = DequipEmotePackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DequipEmotePackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequipEmotePackResponse) ProtoMessage() {}

func (x *DequipEmotePackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequipEmotePackResponse.ProtoReflect.Descriptor instead.
func (*DequipEmotePackResponse) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{15}
}

// Used in the `EquipEmotePack` endpoint.
type EquipEmotePackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the pack.
	PackId uint64 `protobuf:"varint,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
}

func (x *EquipEmotePackRequest) Reset() {
	*x = EquipEmotePackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipEmotePackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipEmotePackRequest) ProtoMessage() {}

func (x *EquipEmotePackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipEmotePackRequest.ProtoReflect.Descriptor instead.
func (*EquipEmotePackRequest) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{16}
}

func (x *EquipEmotePackRequest) GetPackId() uint64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

// Used in the `EquipEmotePack` endpoint.
type EquipEmotePackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EquipEmotePackResponse) Reset() {
	*x = EquipEmotePackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_emote_v1_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipEmotePackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipEmotePackResponse) ProtoMessage() {}

func (x *EquipEmotePackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_emote_v1_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipEmotePackResponse.ProtoReflect.Descriptor instead.
func (*EquipEmotePackResponse) Descriptor() ([]byte, []int) {
	return file_emote_v1_types_proto_rawDescGZIP(), []int{17}
}

var File_emote_v1_types_proto protoreflect.FileDescriptor

var file_emote_v1_types_proto_rawDesc = []byte{
	0x0a, 0x14, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x60, 0x0a, 0x09, 0x45, 0x6d, 0x6f,
	0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x05, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x6f,
	0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x16,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x6f,
	0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x05, 0x70, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x70, 0x61,
	0x63, 0x6b, 0x73, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50,
	0x61, 0x63, 0x6b, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74,
	0x65, 0x52, 0x06, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x15, 0x41, 0x64, 0x64,
	0x45, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x31, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b,
	0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x6f, 0x74,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a,
	0x16, 0x44, 0x65, 0x71, 0x75, 0x69, 0x70, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64,
	0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x71, 0x75, 0x69, 0x70, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x15, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x45, 0x71, 0x75, 0x69, 0x70, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xc7, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x72, 0x6d,
	0x6f, 0x6e, 0x79, 0x2d, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x73, 0x68, 0x69, 0x62, 0x73, 0x68, 0x69, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x50, 0x45, 0x58, 0xaa, 0x02, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x5c, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x3a, 0x3a, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_emote_v1_types_proto_rawDescOnce sync.Once
	file_emote_v1_types_proto_rawDescData = file_emote_v1_types_proto_rawDesc
)

func file_emote_v1_types_proto_rawDescGZIP() []byte {
	file_emote_v1_types_proto_rawDescOnce.Do(func() {
		file_emote_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_emote_v1_types_proto_rawDescData)
	})
	return file_emote_v1_types_proto_rawDescData
}

var file_emote_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_emote_v1_types_proto_goTypes = []interface{}{
	(*EmotePack)(nil),                   // 0: protocol.emote.v1.EmotePack
	(*Emote)(nil),                       // 1: protocol.emote.v1.Emote
	(*CreateEmotePackRequest)(nil),      // 2: protocol.emote.v1.CreateEmotePackRequest
	(*CreateEmotePackResponse)(nil),     // 3: protocol.emote.v1.CreateEmotePackResponse
	(*GetEmotePacksRequest)(nil),        // 4: protocol.emote.v1.GetEmotePacksRequest
	(*GetEmotePacksResponse)(nil),       // 5: protocol.emote.v1.GetEmotePacksResponse
	(*GetEmotePackEmotesRequest)(nil),   // 6: protocol.emote.v1.GetEmotePackEmotesRequest
	(*GetEmotePackEmotesResponse)(nil),  // 7: protocol.emote.v1.GetEmotePackEmotesResponse
	(*AddEmoteToPackRequest)(nil),       // 8: protocol.emote.v1.AddEmoteToPackRequest
	(*AddEmoteToPackResponse)(nil),      // 9: protocol.emote.v1.AddEmoteToPackResponse
	(*DeleteEmoteFromPackRequest)(nil),  // 10: protocol.emote.v1.DeleteEmoteFromPackRequest
	(*DeleteEmoteFromPackResponse)(nil), // 11: protocol.emote.v1.DeleteEmoteFromPackResponse
	(*DeleteEmotePackRequest)(nil),      // 12: protocol.emote.v1.DeleteEmotePackRequest
	(*DeleteEmotePackResponse)(nil),     // 13: protocol.emote.v1.DeleteEmotePackResponse
	(*DequipEmotePackRequest)(nil),      // 14: protocol.emote.v1.DequipEmotePackRequest
	(*DequipEmotePackResponse)(nil),     // 15: protocol.emote.v1.DequipEmotePackResponse
	(*EquipEmotePackRequest)(nil),       // 16: protocol.emote.v1.EquipEmotePackRequest
	(*EquipEmotePackResponse)(nil),      // 17: protocol.emote.v1.EquipEmotePackResponse
}
var file_emote_v1_types_proto_depIdxs = []int32{
	0, // 0: protocol.emote.v1.GetEmotePacksResponse.packs:type_name -> protocol.emote.v1.EmotePack
	1, // 1: protocol.emote.v1.GetEmotePackEmotesResponse.emotes:type_name -> protocol.emote.v1.Emote
	1, // 2: protocol.emote.v1.AddEmoteToPackRequest.emote:type_name -> protocol.emote.v1.Emote
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_emote_v1_types_proto_init() }
func file_emote_v1_types_proto_init() {
	if File_emote_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_emote_v1_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmotePack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmotePackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmotePackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmotePacksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmotePacksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmotePackEmotesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmotePackEmotesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEmoteToPackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEmoteToPackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmoteFromPackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmoteFromPackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmotePackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmotePackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DequipEmotePackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DequipEmotePackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipEmotePackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_emote_v1_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipEmotePackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_emote_v1_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_emote_v1_types_proto_goTypes,
		DependencyIndexes: file_emote_v1_types_proto_depIdxs,
		MessageInfos:      file_emote_v1_types_proto_msgTypes,
	}.Build()
	File_emote_v1_types_proto = out.File
	file_emote_v1_types_proto_rawDesc = nil
	file_emote_v1_types_proto_goTypes = nil
	file_emote_v1_types_proto_depIdxs = nil
}
