// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// ThreatAssessmentRequestObjectRequestBuilder is request builder for ThreatAssessmentRequestObject
type ThreatAssessmentRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns ThreatAssessmentRequestObjectRequest
func (b *ThreatAssessmentRequestObjectRequestBuilder) Request() *ThreatAssessmentRequestObjectRequest {
	return &ThreatAssessmentRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ThreatAssessmentRequestObjectRequest is request for ThreatAssessmentRequestObject
type ThreatAssessmentRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for ThreatAssessmentRequestObject
func (r *ThreatAssessmentRequestObjectRequest) Get(ctx context.Context) (resObj *ThreatAssessmentRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ThreatAssessmentRequestObject
func (r *ThreatAssessmentRequestObjectRequest) Update(ctx context.Context, reqObj *ThreatAssessmentRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ThreatAssessmentRequestObject
func (r *ThreatAssessmentRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ThreatAssessmentResultRequestBuilder is request builder for ThreatAssessmentResult
type ThreatAssessmentResultRequestBuilder struct{ BaseRequestBuilder }

// Request returns ThreatAssessmentResultRequest
func (b *ThreatAssessmentResultRequestBuilder) Request() *ThreatAssessmentResultRequest {
	return &ThreatAssessmentResultRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ThreatAssessmentResultRequest is request for ThreatAssessmentResult
type ThreatAssessmentResultRequest struct{ BaseRequest }

// Get performs GET request for ThreatAssessmentResult
func (r *ThreatAssessmentResultRequest) Get(ctx context.Context) (resObj *ThreatAssessmentResult, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ThreatAssessmentResult
func (r *ThreatAssessmentResultRequest) Update(ctx context.Context, reqObj *ThreatAssessmentResult) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ThreatAssessmentResult
func (r *ThreatAssessmentResultRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
