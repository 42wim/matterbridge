// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// LanguageProficiencyLevel undocumented
type LanguageProficiencyLevel int

const (
	// LanguageProficiencyLevelVElementary undocumented
	LanguageProficiencyLevelVElementary LanguageProficiencyLevel = 0
	// LanguageProficiencyLevelVConversational undocumented
	LanguageProficiencyLevelVConversational LanguageProficiencyLevel = 1
	// LanguageProficiencyLevelVLimitedWorking undocumented
	LanguageProficiencyLevelVLimitedWorking LanguageProficiencyLevel = 2
	// LanguageProficiencyLevelVProfessionalWorking undocumented
	LanguageProficiencyLevelVProfessionalWorking LanguageProficiencyLevel = 3
	// LanguageProficiencyLevelVFullProfessional undocumented
	LanguageProficiencyLevelVFullProfessional LanguageProficiencyLevel = 4
	// LanguageProficiencyLevelVNativeOrBilingual undocumented
	LanguageProficiencyLevelVNativeOrBilingual LanguageProficiencyLevel = 5
	// LanguageProficiencyLevelVUnknownFutureValue undocumented
	LanguageProficiencyLevelVUnknownFutureValue LanguageProficiencyLevel = 6
)

// LanguageProficiencyLevelPElementary returns a pointer to LanguageProficiencyLevelVElementary
func LanguageProficiencyLevelPElementary() *LanguageProficiencyLevel {
	v := LanguageProficiencyLevelVElementary
	return &v
}

// LanguageProficiencyLevelPConversational returns a pointer to LanguageProficiencyLevelVConversational
func LanguageProficiencyLevelPConversational() *LanguageProficiencyLevel {
	v := LanguageProficiencyLevelVConversational
	return &v
}

// LanguageProficiencyLevelPLimitedWorking returns a pointer to LanguageProficiencyLevelVLimitedWorking
func LanguageProficiencyLevelPLimitedWorking() *LanguageProficiencyLevel {
	v := LanguageProficiencyLevelVLimitedWorking
	return &v
}

// LanguageProficiencyLevelPProfessionalWorking returns a pointer to LanguageProficiencyLevelVProfessionalWorking
func LanguageProficiencyLevelPProfessionalWorking() *LanguageProficiencyLevel {
	v := LanguageProficiencyLevelVProfessionalWorking
	return &v
}

// LanguageProficiencyLevelPFullProfessional returns a pointer to LanguageProficiencyLevelVFullProfessional
func LanguageProficiencyLevelPFullProfessional() *LanguageProficiencyLevel {
	v := LanguageProficiencyLevelVFullProfessional
	return &v
}

// LanguageProficiencyLevelPNativeOrBilingual returns a pointer to LanguageProficiencyLevelVNativeOrBilingual
func LanguageProficiencyLevelPNativeOrBilingual() *LanguageProficiencyLevel {
	v := LanguageProficiencyLevelVNativeOrBilingual
	return &v
}

// LanguageProficiencyLevelPUnknownFutureValue returns a pointer to LanguageProficiencyLevelVUnknownFutureValue
func LanguageProficiencyLevelPUnknownFutureValue() *LanguageProficiencyLevel {
	v := LanguageProficiencyLevelVUnknownFutureValue
	return &v
}
