// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// PersonRelationship undocumented
type PersonRelationship int

const (
	// PersonRelationshipVManager undocumented
	PersonRelationshipVManager PersonRelationship = 0
	// PersonRelationshipVColleague undocumented
	PersonRelationshipVColleague PersonRelationship = 1
	// PersonRelationshipVDirectReport undocumented
	PersonRelationshipVDirectReport PersonRelationship = 2
	// PersonRelationshipVDotLineReport undocumented
	PersonRelationshipVDotLineReport PersonRelationship = 3
	// PersonRelationshipVAssistant undocumented
	PersonRelationshipVAssistant PersonRelationship = 4
	// PersonRelationshipVDotLineManager undocumented
	PersonRelationshipVDotLineManager PersonRelationship = 5
	// PersonRelationshipVAlternateContact undocumented
	PersonRelationshipVAlternateContact PersonRelationship = 6
	// PersonRelationshipVFriend undocumented
	PersonRelationshipVFriend PersonRelationship = 7
	// PersonRelationshipVSpouse undocumented
	PersonRelationshipVSpouse PersonRelationship = 8
	// PersonRelationshipVSibling undocumented
	PersonRelationshipVSibling PersonRelationship = 9
	// PersonRelationshipVChild undocumented
	PersonRelationshipVChild PersonRelationship = 10
	// PersonRelationshipVParent undocumented
	PersonRelationshipVParent PersonRelationship = 11
	// PersonRelationshipVSponsor undocumented
	PersonRelationshipVSponsor PersonRelationship = 12
	// PersonRelationshipVEmergencyContact undocumented
	PersonRelationshipVEmergencyContact PersonRelationship = 13
	// PersonRelationshipVOther undocumented
	PersonRelationshipVOther PersonRelationship = 14
	// PersonRelationshipVUnknownFutureValue undocumented
	PersonRelationshipVUnknownFutureValue PersonRelationship = 15
)

// PersonRelationshipPManager returns a pointer to PersonRelationshipVManager
func PersonRelationshipPManager() *PersonRelationship {
	v := PersonRelationshipVManager
	return &v
}

// PersonRelationshipPColleague returns a pointer to PersonRelationshipVColleague
func PersonRelationshipPColleague() *PersonRelationship {
	v := PersonRelationshipVColleague
	return &v
}

// PersonRelationshipPDirectReport returns a pointer to PersonRelationshipVDirectReport
func PersonRelationshipPDirectReport() *PersonRelationship {
	v := PersonRelationshipVDirectReport
	return &v
}

// PersonRelationshipPDotLineReport returns a pointer to PersonRelationshipVDotLineReport
func PersonRelationshipPDotLineReport() *PersonRelationship {
	v := PersonRelationshipVDotLineReport
	return &v
}

// PersonRelationshipPAssistant returns a pointer to PersonRelationshipVAssistant
func PersonRelationshipPAssistant() *PersonRelationship {
	v := PersonRelationshipVAssistant
	return &v
}

// PersonRelationshipPDotLineManager returns a pointer to PersonRelationshipVDotLineManager
func PersonRelationshipPDotLineManager() *PersonRelationship {
	v := PersonRelationshipVDotLineManager
	return &v
}

// PersonRelationshipPAlternateContact returns a pointer to PersonRelationshipVAlternateContact
func PersonRelationshipPAlternateContact() *PersonRelationship {
	v := PersonRelationshipVAlternateContact
	return &v
}

// PersonRelationshipPFriend returns a pointer to PersonRelationshipVFriend
func PersonRelationshipPFriend() *PersonRelationship {
	v := PersonRelationshipVFriend
	return &v
}

// PersonRelationshipPSpouse returns a pointer to PersonRelationshipVSpouse
func PersonRelationshipPSpouse() *PersonRelationship {
	v := PersonRelationshipVSpouse
	return &v
}

// PersonRelationshipPSibling returns a pointer to PersonRelationshipVSibling
func PersonRelationshipPSibling() *PersonRelationship {
	v := PersonRelationshipVSibling
	return &v
}

// PersonRelationshipPChild returns a pointer to PersonRelationshipVChild
func PersonRelationshipPChild() *PersonRelationship {
	v := PersonRelationshipVChild
	return &v
}

// PersonRelationshipPParent returns a pointer to PersonRelationshipVParent
func PersonRelationshipPParent() *PersonRelationship {
	v := PersonRelationshipVParent
	return &v
}

// PersonRelationshipPSponsor returns a pointer to PersonRelationshipVSponsor
func PersonRelationshipPSponsor() *PersonRelationship {
	v := PersonRelationshipVSponsor
	return &v
}

// PersonRelationshipPEmergencyContact returns a pointer to PersonRelationshipVEmergencyContact
func PersonRelationshipPEmergencyContact() *PersonRelationship {
	v := PersonRelationshipVEmergencyContact
	return &v
}

// PersonRelationshipPOther returns a pointer to PersonRelationshipVOther
func PersonRelationshipPOther() *PersonRelationship {
	v := PersonRelationshipVOther
	return &v
}

// PersonRelationshipPUnknownFutureValue returns a pointer to PersonRelationshipVUnknownFutureValue
func PersonRelationshipPUnknownFutureValue() *PersonRelationship {
	v := PersonRelationshipVUnknownFutureValue
	return &v
}
