// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// IOSEasEmailProfileConfiguration By providing configurations in this profile you can instruct the native email client on iOS devices to communicate with an Exchange server and get email, contacts, calendar, reminders, and notes. Furthermore, you can also specify how much email to sync and how often the device should sync.
type IOSEasEmailProfileConfiguration struct {
	// EasEmailProfileConfigurationBase is the base model of IOSEasEmailProfileConfiguration
	EasEmailProfileConfigurationBase
	// AccountName Account name.
	AccountName *string `json:"accountName,omitempty"`
	// AuthenticationMethod Authentication method for this Email profile.
	AuthenticationMethod *EasAuthenticationMethod `json:"authenticationMethod,omitempty"`
	// BlockMovingMessagesToOtherEmailAccounts Indicates whether or not to block moving messages to other email accounts.
	BlockMovingMessagesToOtherEmailAccounts *bool `json:"blockMovingMessagesToOtherEmailAccounts,omitempty"`
	// BlockSendingEmailFromThirdPartyApps Indicates whether or not to block sending email from third party apps.
	BlockSendingEmailFromThirdPartyApps *bool `json:"blockSendingEmailFromThirdPartyApps,omitempty"`
	// BlockSyncingRecentlyUsedEmailAddresses Indicates whether or not to block syncing recently used email addresses, for instance - when composing new email.
	BlockSyncingRecentlyUsedEmailAddresses *bool `json:"blockSyncingRecentlyUsedEmailAddresses,omitempty"`
	// DurationOfEmailToSync Duration of time email should be synced back to.
	DurationOfEmailToSync *EmailSyncDuration `json:"durationOfEmailToSync,omitempty"`
	// EmailAddressSource Email attribute that is picked from AAD and injected into this profile before installing on the device.
	EmailAddressSource *UserEmailSource `json:"emailAddressSource,omitempty"`
	// EasServices Exchange data to sync.
	EasServices *EasServices `json:"easServices,omitempty"`
	// EasServicesUserOverrideEnabled Allow users to change sync settings.
	EasServicesUserOverrideEnabled *bool `json:"easServicesUserOverrideEnabled,omitempty"`
	// HostName Exchange location that (URL) that the native mail app connects to.
	HostName *string `json:"hostName,omitempty"`
	// RequireSmime Indicates whether or not to use S/MIME certificate.
	RequireSmime *bool `json:"requireSmime,omitempty"`
	// SmimeEnablePerMessageSwitch Indicates whether or not to allow unencrypted emails.
	SmimeEnablePerMessageSwitch *bool `json:"smimeEnablePerMessageSwitch,omitempty"`
	// SmimeEncryptByDefaultEnabled If set to true S/MIME encryption is enabled by default.
	SmimeEncryptByDefaultEnabled *bool `json:"smimeEncryptByDefaultEnabled,omitempty"`
	// SmimeSigningEnabled If set to true S/MIME signing is enabled for this account
	SmimeSigningEnabled *bool `json:"smimeSigningEnabled,omitempty"`
	// SmimeSigningUserOverrideEnabled If set to true, the user can toggle S/MIME signing on or off.
	SmimeSigningUserOverrideEnabled *bool `json:"smimeSigningUserOverrideEnabled,omitempty"`
	// SmimeEncryptByDefaultUserOverrideEnabled If set to true, the user can toggle the encryption by default setting.
	SmimeEncryptByDefaultUserOverrideEnabled *bool `json:"smimeEncryptByDefaultUserOverrideEnabled,omitempty"`
	// SmimeSigningCertificateUserOverrideEnabled If set to true, the user can select the signing identity.
	SmimeSigningCertificateUserOverrideEnabled *bool `json:"smimeSigningCertificateUserOverrideEnabled,omitempty"`
	// SmimeEncryptionCertificateUserOverrideEnabled If set to true the user can select the S/MIME encryption identity.
	SmimeEncryptionCertificateUserOverrideEnabled *bool `json:"smimeEncryptionCertificateUserOverrideEnabled,omitempty"`
	// RequireSsl Indicates whether or not to use SSL.
	RequireSsl *bool `json:"requireSsl,omitempty"`
	// UseOAuth Specifies whether the connection should use OAuth for authentication.
	UseOAuth *bool `json:"useOAuth,omitempty"`
	// SigningCertificateType Signing Certificate type for this Email profile.
	SigningCertificateType *EmailCertificateType `json:"signingCertificateType,omitempty"`
	// EncryptionCertificateType Encryption Certificate type for this Email profile.
	EncryptionCertificateType *EmailCertificateType `json:"encryptionCertificateType,omitempty"`
	// IdentityCertificate undocumented
	IdentityCertificate *IOSCertificateProfileBase `json:"identityCertificate,omitempty"`
	// SmimeSigningCertificate undocumented
	SmimeSigningCertificate *IOSCertificateProfile `json:"smimeSigningCertificate,omitempty"`
	// SmimeEncryptionCertificate undocumented
	SmimeEncryptionCertificate *IOSCertificateProfile `json:"smimeEncryptionCertificate,omitempty"`
	// DerivedCredentialSettings undocumented
	DerivedCredentialSettings *DeviceManagementDerivedCredentialSettings `json:"derivedCredentialSettings,omitempty"`
}
