// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

// ComplianceStatus undocumented
type ComplianceStatus int

const (
	// ComplianceStatusVUnknown undocumented
	ComplianceStatusVUnknown ComplianceStatus = 0
	// ComplianceStatusVNotApplicable undocumented
	ComplianceStatusVNotApplicable ComplianceStatus = 1
	// ComplianceStatusVCompliant undocumented
	ComplianceStatusVCompliant ComplianceStatus = 2
	// ComplianceStatusVRemediated undocumented
	ComplianceStatusVRemediated ComplianceStatus = 3
	// ComplianceStatusVNonCompliant undocumented
	ComplianceStatusVNonCompliant ComplianceStatus = 4
	// ComplianceStatusVError undocumented
	ComplianceStatusVError ComplianceStatus = 5
	// ComplianceStatusVConflict undocumented
	ComplianceStatusVConflict ComplianceStatus = 6
	// ComplianceStatusVNotAssigned undocumented
	ComplianceStatusVNotAssigned ComplianceStatus = 7
)

// ComplianceStatusPUnknown returns a pointer to ComplianceStatusVUnknown
func ComplianceStatusPUnknown() *ComplianceStatus {
	v := ComplianceStatusVUnknown
	return &v
}

// ComplianceStatusPNotApplicable returns a pointer to ComplianceStatusVNotApplicable
func ComplianceStatusPNotApplicable() *ComplianceStatus {
	v := ComplianceStatusVNotApplicable
	return &v
}

// ComplianceStatusPCompliant returns a pointer to ComplianceStatusVCompliant
func ComplianceStatusPCompliant() *ComplianceStatus {
	v := ComplianceStatusVCompliant
	return &v
}

// ComplianceStatusPRemediated returns a pointer to ComplianceStatusVRemediated
func ComplianceStatusPRemediated() *ComplianceStatus {
	v := ComplianceStatusVRemediated
	return &v
}

// ComplianceStatusPNonCompliant returns a pointer to ComplianceStatusVNonCompliant
func ComplianceStatusPNonCompliant() *ComplianceStatus {
	v := ComplianceStatusVNonCompliant
	return &v
}

// ComplianceStatusPError returns a pointer to ComplianceStatusVError
func ComplianceStatusPError() *ComplianceStatus {
	v := ComplianceStatusVError
	return &v
}

// ComplianceStatusPConflict returns a pointer to ComplianceStatusVConflict
func ComplianceStatusPConflict() *ComplianceStatus {
	v := ComplianceStatusVConflict
	return &v
}

// ComplianceStatusPNotAssigned returns a pointer to ComplianceStatusVNotAssigned
func ComplianceStatusPNotAssigned() *ComplianceStatus {
	v := ComplianceStatusVNotAssigned
	return &v
}
