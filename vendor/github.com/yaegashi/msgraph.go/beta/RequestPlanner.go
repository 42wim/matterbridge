// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// PlannerRequestBuilder is request builder for Planner
type PlannerRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerRequest
func (b *PlannerRequestBuilder) Request() *PlannerRequest {
	return &PlannerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerRequest is request for Planner
type PlannerRequest struct{ BaseRequest }

// Get performs GET request for Planner
func (r *PlannerRequest) Get(ctx context.Context) (resObj *Planner, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Planner
func (r *PlannerRequest) Update(ctx context.Context, reqObj *Planner) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Planner
func (r *PlannerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerAssignedToTaskBoardTaskFormatRequestBuilder is request builder for PlannerAssignedToTaskBoardTaskFormat
type PlannerAssignedToTaskBoardTaskFormatRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerAssignedToTaskBoardTaskFormatRequest
func (b *PlannerAssignedToTaskBoardTaskFormatRequestBuilder) Request() *PlannerAssignedToTaskBoardTaskFormatRequest {
	return &PlannerAssignedToTaskBoardTaskFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerAssignedToTaskBoardTaskFormatRequest is request for PlannerAssignedToTaskBoardTaskFormat
type PlannerAssignedToTaskBoardTaskFormatRequest struct{ BaseRequest }

// Get performs GET request for PlannerAssignedToTaskBoardTaskFormat
func (r *PlannerAssignedToTaskBoardTaskFormatRequest) Get(ctx context.Context) (resObj *PlannerAssignedToTaskBoardTaskFormat, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerAssignedToTaskBoardTaskFormat
func (r *PlannerAssignedToTaskBoardTaskFormatRequest) Update(ctx context.Context, reqObj *PlannerAssignedToTaskBoardTaskFormat) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerAssignedToTaskBoardTaskFormat
func (r *PlannerAssignedToTaskBoardTaskFormatRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerBucketRequestBuilder is request builder for PlannerBucket
type PlannerBucketRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerBucketRequest
func (b *PlannerBucketRequestBuilder) Request() *PlannerBucketRequest {
	return &PlannerBucketRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerBucketRequest is request for PlannerBucket
type PlannerBucketRequest struct{ BaseRequest }

// Get performs GET request for PlannerBucket
func (r *PlannerBucketRequest) Get(ctx context.Context) (resObj *PlannerBucket, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerBucket
func (r *PlannerBucketRequest) Update(ctx context.Context, reqObj *PlannerBucket) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerBucket
func (r *PlannerBucketRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerBucketTaskBoardTaskFormatRequestBuilder is request builder for PlannerBucketTaskBoardTaskFormat
type PlannerBucketTaskBoardTaskFormatRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerBucketTaskBoardTaskFormatRequest
func (b *PlannerBucketTaskBoardTaskFormatRequestBuilder) Request() *PlannerBucketTaskBoardTaskFormatRequest {
	return &PlannerBucketTaskBoardTaskFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerBucketTaskBoardTaskFormatRequest is request for PlannerBucketTaskBoardTaskFormat
type PlannerBucketTaskBoardTaskFormatRequest struct{ BaseRequest }

// Get performs GET request for PlannerBucketTaskBoardTaskFormat
func (r *PlannerBucketTaskBoardTaskFormatRequest) Get(ctx context.Context) (resObj *PlannerBucketTaskBoardTaskFormat, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerBucketTaskBoardTaskFormat
func (r *PlannerBucketTaskBoardTaskFormatRequest) Update(ctx context.Context, reqObj *PlannerBucketTaskBoardTaskFormat) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerBucketTaskBoardTaskFormat
func (r *PlannerBucketTaskBoardTaskFormatRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerDeltaRequestBuilder is request builder for PlannerDelta
type PlannerDeltaRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerDeltaRequest
func (b *PlannerDeltaRequestBuilder) Request() *PlannerDeltaRequest {
	return &PlannerDeltaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerDeltaRequest is request for PlannerDelta
type PlannerDeltaRequest struct{ BaseRequest }

// Get performs GET request for PlannerDelta
func (r *PlannerDeltaRequest) Get(ctx context.Context) (resObj *PlannerDelta, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerDelta
func (r *PlannerDeltaRequest) Update(ctx context.Context, reqObj *PlannerDelta) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerDelta
func (r *PlannerDeltaRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerGroupRequestBuilder is request builder for PlannerGroup
type PlannerGroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerGroupRequest
func (b *PlannerGroupRequestBuilder) Request() *PlannerGroupRequest {
	return &PlannerGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerGroupRequest is request for PlannerGroup
type PlannerGroupRequest struct{ BaseRequest }

// Get performs GET request for PlannerGroup
func (r *PlannerGroupRequest) Get(ctx context.Context) (resObj *PlannerGroup, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerGroup
func (r *PlannerGroupRequest) Update(ctx context.Context, reqObj *PlannerGroup) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerGroup
func (r *PlannerGroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerPlanRequestBuilder is request builder for PlannerPlan
type PlannerPlanRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerPlanRequest
func (b *PlannerPlanRequestBuilder) Request() *PlannerPlanRequest {
	return &PlannerPlanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerPlanRequest is request for PlannerPlan
type PlannerPlanRequest struct{ BaseRequest }

// Get performs GET request for PlannerPlan
func (r *PlannerPlanRequest) Get(ctx context.Context) (resObj *PlannerPlan, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerPlan
func (r *PlannerPlanRequest) Update(ctx context.Context, reqObj *PlannerPlan) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerPlan
func (r *PlannerPlanRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerPlanDetailsRequestBuilder is request builder for PlannerPlanDetails
type PlannerPlanDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerPlanDetailsRequest
func (b *PlannerPlanDetailsRequestBuilder) Request() *PlannerPlanDetailsRequest {
	return &PlannerPlanDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerPlanDetailsRequest is request for PlannerPlanDetails
type PlannerPlanDetailsRequest struct{ BaseRequest }

// Get performs GET request for PlannerPlanDetails
func (r *PlannerPlanDetailsRequest) Get(ctx context.Context) (resObj *PlannerPlanDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerPlanDetails
func (r *PlannerPlanDetailsRequest) Update(ctx context.Context, reqObj *PlannerPlanDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerPlanDetails
func (r *PlannerPlanDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerProgressTaskBoardTaskFormatRequestBuilder is request builder for PlannerProgressTaskBoardTaskFormat
type PlannerProgressTaskBoardTaskFormatRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerProgressTaskBoardTaskFormatRequest
func (b *PlannerProgressTaskBoardTaskFormatRequestBuilder) Request() *PlannerProgressTaskBoardTaskFormatRequest {
	return &PlannerProgressTaskBoardTaskFormatRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerProgressTaskBoardTaskFormatRequest is request for PlannerProgressTaskBoardTaskFormat
type PlannerProgressTaskBoardTaskFormatRequest struct{ BaseRequest }

// Get performs GET request for PlannerProgressTaskBoardTaskFormat
func (r *PlannerProgressTaskBoardTaskFormatRequest) Get(ctx context.Context) (resObj *PlannerProgressTaskBoardTaskFormat, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerProgressTaskBoardTaskFormat
func (r *PlannerProgressTaskBoardTaskFormatRequest) Update(ctx context.Context, reqObj *PlannerProgressTaskBoardTaskFormat) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerProgressTaskBoardTaskFormat
func (r *PlannerProgressTaskBoardTaskFormatRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerTaskRequestBuilder is request builder for PlannerTask
type PlannerTaskRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerTaskRequest
func (b *PlannerTaskRequestBuilder) Request() *PlannerTaskRequest {
	return &PlannerTaskRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerTaskRequest is request for PlannerTask
type PlannerTaskRequest struct{ BaseRequest }

// Get performs GET request for PlannerTask
func (r *PlannerTaskRequest) Get(ctx context.Context) (resObj *PlannerTask, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerTask
func (r *PlannerTaskRequest) Update(ctx context.Context, reqObj *PlannerTask) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerTask
func (r *PlannerTaskRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerTaskDetailsRequestBuilder is request builder for PlannerTaskDetails
type PlannerTaskDetailsRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerTaskDetailsRequest
func (b *PlannerTaskDetailsRequestBuilder) Request() *PlannerTaskDetailsRequest {
	return &PlannerTaskDetailsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerTaskDetailsRequest is request for PlannerTaskDetails
type PlannerTaskDetailsRequest struct{ BaseRequest }

// Get performs GET request for PlannerTaskDetails
func (r *PlannerTaskDetailsRequest) Get(ctx context.Context) (resObj *PlannerTaskDetails, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerTaskDetails
func (r *PlannerTaskDetailsRequest) Update(ctx context.Context, reqObj *PlannerTaskDetails) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerTaskDetails
func (r *PlannerTaskDetailsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// PlannerUserRequestBuilder is request builder for PlannerUser
type PlannerUserRequestBuilder struct{ BaseRequestBuilder }

// Request returns PlannerUserRequest
func (b *PlannerUserRequestBuilder) Request() *PlannerUserRequest {
	return &PlannerUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PlannerUserRequest is request for PlannerUser
type PlannerUserRequest struct{ BaseRequest }

// Get performs GET request for PlannerUser
func (r *PlannerUserRequest) Get(ctx context.Context) (resObj *PlannerUser, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PlannerUser
func (r *PlannerUserRequest) Update(ctx context.Context, reqObj *PlannerUser) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PlannerUser
func (r *PlannerUserRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
