// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// ManagedAllDeviceCertificateStateRequestBuilder is request builder for ManagedAllDeviceCertificateState
type ManagedAllDeviceCertificateStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAllDeviceCertificateStateRequest
func (b *ManagedAllDeviceCertificateStateRequestBuilder) Request() *ManagedAllDeviceCertificateStateRequest {
	return &ManagedAllDeviceCertificateStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAllDeviceCertificateStateRequest is request for ManagedAllDeviceCertificateState
type ManagedAllDeviceCertificateStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedAllDeviceCertificateState
func (r *ManagedAllDeviceCertificateStateRequest) Get(ctx context.Context) (resObj *ManagedAllDeviceCertificateState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAllDeviceCertificateState
func (r *ManagedAllDeviceCertificateStateRequest) Update(ctx context.Context, reqObj *ManagedAllDeviceCertificateState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAllDeviceCertificateState
func (r *ManagedAllDeviceCertificateStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppOperationRequestBuilder is request builder for ManagedAppOperation
type ManagedAppOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppOperationRequest
func (b *ManagedAppOperationRequestBuilder) Request() *ManagedAppOperationRequest {
	return &ManagedAppOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppOperationRequest is request for ManagedAppOperation
type ManagedAppOperationRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppOperation
func (r *ManagedAppOperationRequest) Get(ctx context.Context) (resObj *ManagedAppOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppOperation
func (r *ManagedAppOperationRequest) Update(ctx context.Context, reqObj *ManagedAppOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppOperation
func (r *ManagedAppOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppPolicyRequestBuilder is request builder for ManagedAppPolicy
type ManagedAppPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppPolicyRequest
func (b *ManagedAppPolicyRequestBuilder) Request() *ManagedAppPolicyRequest {
	return &ManagedAppPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppPolicyRequest is request for ManagedAppPolicy
type ManagedAppPolicyRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppPolicy
func (r *ManagedAppPolicyRequest) Get(ctx context.Context) (resObj *ManagedAppPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppPolicy
func (r *ManagedAppPolicyRequest) Update(ctx context.Context, reqObj *ManagedAppPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppPolicy
func (r *ManagedAppPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppPolicyDeploymentSummaryRequestBuilder is request builder for ManagedAppPolicyDeploymentSummary
type ManagedAppPolicyDeploymentSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppPolicyDeploymentSummaryRequest
func (b *ManagedAppPolicyDeploymentSummaryRequestBuilder) Request() *ManagedAppPolicyDeploymentSummaryRequest {
	return &ManagedAppPolicyDeploymentSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppPolicyDeploymentSummaryRequest is request for ManagedAppPolicyDeploymentSummary
type ManagedAppPolicyDeploymentSummaryRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppPolicyDeploymentSummary
func (r *ManagedAppPolicyDeploymentSummaryRequest) Get(ctx context.Context) (resObj *ManagedAppPolicyDeploymentSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppPolicyDeploymentSummary
func (r *ManagedAppPolicyDeploymentSummaryRequest) Update(ctx context.Context, reqObj *ManagedAppPolicyDeploymentSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppPolicyDeploymentSummary
func (r *ManagedAppPolicyDeploymentSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppProtectionRequestBuilder is request builder for ManagedAppProtection
type ManagedAppProtectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppProtectionRequest
func (b *ManagedAppProtectionRequestBuilder) Request() *ManagedAppProtectionRequest {
	return &ManagedAppProtectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppProtectionRequest is request for ManagedAppProtection
type ManagedAppProtectionRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppProtection
func (r *ManagedAppProtectionRequest) Get(ctx context.Context) (resObj *ManagedAppProtection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppProtection
func (r *ManagedAppProtectionRequest) Update(ctx context.Context, reqObj *ManagedAppProtection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppProtection
func (r *ManagedAppProtectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppRegistrationRequestBuilder is request builder for ManagedAppRegistration
type ManagedAppRegistrationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppRegistrationRequest
func (b *ManagedAppRegistrationRequestBuilder) Request() *ManagedAppRegistrationRequest {
	return &ManagedAppRegistrationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppRegistrationRequest is request for ManagedAppRegistration
type ManagedAppRegistrationRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppRegistration
func (r *ManagedAppRegistrationRequest) Get(ctx context.Context) (resObj *ManagedAppRegistration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppRegistration
func (r *ManagedAppRegistrationRequest) Update(ctx context.Context, reqObj *ManagedAppRegistration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppRegistration
func (r *ManagedAppRegistrationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedAppStatusRequestBuilder is request builder for ManagedAppStatus
type ManagedAppStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedAppStatusRequest
func (b *ManagedAppStatusRequestBuilder) Request() *ManagedAppStatusRequest {
	return &ManagedAppStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedAppStatusRequest is request for ManagedAppStatus
type ManagedAppStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedAppStatus
func (r *ManagedAppStatusRequest) Get(ctx context.Context) (resObj *ManagedAppStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedAppStatus
func (r *ManagedAppStatusRequest) Update(ctx context.Context, reqObj *ManagedAppStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedAppStatus
func (r *ManagedAppStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceRequestBuilder is request builder for ManagedDevice
type ManagedDeviceRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceRequest
func (b *ManagedDeviceRequestBuilder) Request() *ManagedDeviceRequest {
	return &ManagedDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceRequest is request for ManagedDevice
type ManagedDeviceRequest struct{ BaseRequest }

// Get performs GET request for ManagedDevice
func (r *ManagedDeviceRequest) Get(ctx context.Context) (resObj *ManagedDevice, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDevice
func (r *ManagedDeviceRequest) Update(ctx context.Context, reqObj *ManagedDevice) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDevice
func (r *ManagedDeviceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceCertificateStateRequestBuilder is request builder for ManagedDeviceCertificateState
type ManagedDeviceCertificateStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceCertificateStateRequest
func (b *ManagedDeviceCertificateStateRequestBuilder) Request() *ManagedDeviceCertificateStateRequest {
	return &ManagedDeviceCertificateStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceCertificateStateRequest is request for ManagedDeviceCertificateState
type ManagedDeviceCertificateStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceCertificateState
func (r *ManagedDeviceCertificateStateRequest) Get(ctx context.Context) (resObj *ManagedDeviceCertificateState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceCertificateState
func (r *ManagedDeviceCertificateStateRequest) Update(ctx context.Context, reqObj *ManagedDeviceCertificateState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceCertificateState
func (r *ManagedDeviceCertificateStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceEncryptionStateRequestBuilder is request builder for ManagedDeviceEncryptionState
type ManagedDeviceEncryptionStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceEncryptionStateRequest
func (b *ManagedDeviceEncryptionStateRequestBuilder) Request() *ManagedDeviceEncryptionStateRequest {
	return &ManagedDeviceEncryptionStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceEncryptionStateRequest is request for ManagedDeviceEncryptionState
type ManagedDeviceEncryptionStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceEncryptionState
func (r *ManagedDeviceEncryptionStateRequest) Get(ctx context.Context) (resObj *ManagedDeviceEncryptionState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceEncryptionState
func (r *ManagedDeviceEncryptionStateRequest) Update(ctx context.Context, reqObj *ManagedDeviceEncryptionState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceEncryptionState
func (r *ManagedDeviceEncryptionStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationRequestBuilder is request builder for ManagedDeviceMobileAppConfiguration
type ManagedDeviceMobileAppConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationRequest
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationRequest {
	return &ManagedDeviceMobileAppConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationRequest is request for ManagedDeviceMobileAppConfiguration
type ManagedDeviceMobileAppConfigurationRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfiguration
func (r *ManagedDeviceMobileAppConfigurationRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfiguration
func (r *ManagedDeviceMobileAppConfigurationRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfiguration
func (r *ManagedDeviceMobileAppConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationAssignmentRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationAssignment
type ManagedDeviceMobileAppConfigurationAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationAssignmentRequest
func (b *ManagedDeviceMobileAppConfigurationAssignmentRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationAssignmentRequest {
	return &ManagedDeviceMobileAppConfigurationAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationAssignmentRequest is request for ManagedDeviceMobileAppConfigurationAssignment
type ManagedDeviceMobileAppConfigurationAssignmentRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationAssignment
func (r *ManagedDeviceMobileAppConfigurationAssignmentRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationAssignment
func (r *ManagedDeviceMobileAppConfigurationAssignmentRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationAssignment
func (r *ManagedDeviceMobileAppConfigurationAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationDeviceStatusRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationDeviceStatus
type ManagedDeviceMobileAppConfigurationDeviceStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationDeviceStatusRequest
func (b *ManagedDeviceMobileAppConfigurationDeviceStatusRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationDeviceStatusRequest {
	return &ManagedDeviceMobileAppConfigurationDeviceStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationDeviceStatusRequest is request for ManagedDeviceMobileAppConfigurationDeviceStatus
type ManagedDeviceMobileAppConfigurationDeviceStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationDeviceStatus
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationDeviceStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationDeviceStatus
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationDeviceStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationDeviceStatus
func (r *ManagedDeviceMobileAppConfigurationDeviceStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationDeviceSummaryRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationDeviceSummary
type ManagedDeviceMobileAppConfigurationDeviceSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationDeviceSummaryRequest
func (b *ManagedDeviceMobileAppConfigurationDeviceSummaryRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest {
	return &ManagedDeviceMobileAppConfigurationDeviceSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationDeviceSummaryRequest is request for ManagedDeviceMobileAppConfigurationDeviceSummary
type ManagedDeviceMobileAppConfigurationDeviceSummaryRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationDeviceSummary
func (r *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationDeviceSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationDeviceSummary
func (r *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationDeviceSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationDeviceSummary
func (r *ManagedDeviceMobileAppConfigurationDeviceSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationStateRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationState
type ManagedDeviceMobileAppConfigurationStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationStateRequest
func (b *ManagedDeviceMobileAppConfigurationStateRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationStateRequest {
	return &ManagedDeviceMobileAppConfigurationStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationStateRequest is request for ManagedDeviceMobileAppConfigurationState
type ManagedDeviceMobileAppConfigurationStateRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationState
func (r *ManagedDeviceMobileAppConfigurationStateRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationState
func (r *ManagedDeviceMobileAppConfigurationStateRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationState
func (r *ManagedDeviceMobileAppConfigurationStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationUserStatusRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationUserStatus
type ManagedDeviceMobileAppConfigurationUserStatusRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationUserStatusRequest
func (b *ManagedDeviceMobileAppConfigurationUserStatusRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationUserStatusRequest {
	return &ManagedDeviceMobileAppConfigurationUserStatusRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationUserStatusRequest is request for ManagedDeviceMobileAppConfigurationUserStatus
type ManagedDeviceMobileAppConfigurationUserStatusRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationUserStatus
func (r *ManagedDeviceMobileAppConfigurationUserStatusRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationUserStatus, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationUserStatus
func (r *ManagedDeviceMobileAppConfigurationUserStatusRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationUserStatus) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationUserStatus
func (r *ManagedDeviceMobileAppConfigurationUserStatusRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceMobileAppConfigurationUserSummaryRequestBuilder is request builder for ManagedDeviceMobileAppConfigurationUserSummary
type ManagedDeviceMobileAppConfigurationUserSummaryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceMobileAppConfigurationUserSummaryRequest
func (b *ManagedDeviceMobileAppConfigurationUserSummaryRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationUserSummaryRequest {
	return &ManagedDeviceMobileAppConfigurationUserSummaryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceMobileAppConfigurationUserSummaryRequest is request for ManagedDeviceMobileAppConfigurationUserSummary
type ManagedDeviceMobileAppConfigurationUserSummaryRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceMobileAppConfigurationUserSummary
func (r *ManagedDeviceMobileAppConfigurationUserSummaryRequest) Get(ctx context.Context) (resObj *ManagedDeviceMobileAppConfigurationUserSummary, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceMobileAppConfigurationUserSummary
func (r *ManagedDeviceMobileAppConfigurationUserSummaryRequest) Update(ctx context.Context, reqObj *ManagedDeviceMobileAppConfigurationUserSummary) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceMobileAppConfigurationUserSummary
func (r *ManagedDeviceMobileAppConfigurationUserSummaryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDeviceOverviewRequestBuilder is request builder for ManagedDeviceOverview
type ManagedDeviceOverviewRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedDeviceOverviewRequest
func (b *ManagedDeviceOverviewRequestBuilder) Request() *ManagedDeviceOverviewRequest {
	return &ManagedDeviceOverviewRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedDeviceOverviewRequest is request for ManagedDeviceOverview
type ManagedDeviceOverviewRequest struct{ BaseRequest }

// Get performs GET request for ManagedDeviceOverview
func (r *ManagedDeviceOverviewRequest) Get(ctx context.Context) (resObj *ManagedDeviceOverview, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedDeviceOverview
func (r *ManagedDeviceOverviewRequest) Update(ctx context.Context, reqObj *ManagedDeviceOverview) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedDeviceOverview
func (r *ManagedDeviceOverviewRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedEBookRequestBuilder is request builder for ManagedEBook
type ManagedEBookRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedEBookRequest
func (b *ManagedEBookRequestBuilder) Request() *ManagedEBookRequest {
	return &ManagedEBookRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedEBookRequest is request for ManagedEBook
type ManagedEBookRequest struct{ BaseRequest }

// Get performs GET request for ManagedEBook
func (r *ManagedEBookRequest) Get(ctx context.Context) (resObj *ManagedEBook, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedEBook
func (r *ManagedEBookRequest) Update(ctx context.Context, reqObj *ManagedEBook) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedEBook
func (r *ManagedEBookRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedEBookAssignmentRequestBuilder is request builder for ManagedEBookAssignment
type ManagedEBookAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedEBookAssignmentRequest
func (b *ManagedEBookAssignmentRequestBuilder) Request() *ManagedEBookAssignmentRequest {
	return &ManagedEBookAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedEBookAssignmentRequest is request for ManagedEBookAssignment
type ManagedEBookAssignmentRequest struct{ BaseRequest }

// Get performs GET request for ManagedEBookAssignment
func (r *ManagedEBookAssignmentRequest) Get(ctx context.Context) (resObj *ManagedEBookAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedEBookAssignment
func (r *ManagedEBookAssignmentRequest) Update(ctx context.Context, reqObj *ManagedEBookAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedEBookAssignment
func (r *ManagedEBookAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedEBookCategoryRequestBuilder is request builder for ManagedEBookCategory
type ManagedEBookCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedEBookCategoryRequest
func (b *ManagedEBookCategoryRequestBuilder) Request() *ManagedEBookCategoryRequest {
	return &ManagedEBookCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedEBookCategoryRequest is request for ManagedEBookCategory
type ManagedEBookCategoryRequest struct{ BaseRequest }

// Get performs GET request for ManagedEBookCategory
func (r *ManagedEBookCategoryRequest) Get(ctx context.Context) (resObj *ManagedEBookCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedEBookCategory
func (r *ManagedEBookCategoryRequest) Update(ctx context.Context, reqObj *ManagedEBookCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedEBookCategory
func (r *ManagedEBookCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedMobileAppRequestBuilder is request builder for ManagedMobileApp
type ManagedMobileAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedMobileAppRequest
func (b *ManagedMobileAppRequestBuilder) Request() *ManagedMobileAppRequest {
	return &ManagedMobileAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedMobileAppRequest is request for ManagedMobileApp
type ManagedMobileAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedMobileApp
func (r *ManagedMobileAppRequest) Get(ctx context.Context) (resObj *ManagedMobileApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedMobileApp
func (r *ManagedMobileAppRequest) Update(ctx context.Context, reqObj *ManagedMobileApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedMobileApp
func (r *ManagedMobileAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedMobileLobAppRequestBuilder is request builder for ManagedMobileLobApp
type ManagedMobileLobAppRequestBuilder struct{ BaseRequestBuilder }

// Request returns ManagedMobileLobAppRequest
func (b *ManagedMobileLobAppRequestBuilder) Request() *ManagedMobileLobAppRequest {
	return &ManagedMobileLobAppRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ManagedMobileLobAppRequest is request for ManagedMobileLobApp
type ManagedMobileLobAppRequest struct{ BaseRequest }

// Get performs GET request for ManagedMobileLobApp
func (r *ManagedMobileLobAppRequest) Get(ctx context.Context) (resObj *ManagedMobileLobApp, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ManagedMobileLobApp
func (r *ManagedMobileLobAppRequest) Update(ctx context.Context, reqObj *ManagedMobileLobApp) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ManagedMobileLobApp
func (r *ManagedMobileLobAppRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

//
type ManagedDeviceCollectionExecuteActionRequestBuilder struct{ BaseRequestBuilder }

// ExecuteAction action undocumented
func (b *DetectedAppManagedDevicesCollectionRequestBuilder) ExecuteAction(reqObj *ManagedDeviceCollectionExecuteActionRequestParameter) *ManagedDeviceCollectionExecuteActionRequestBuilder {
	bb := &ManagedDeviceCollectionExecuteActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/executeAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ExecuteAction action undocumented
func (b *DeviceManagementManagedDevicesCollectionRequestBuilder) ExecuteAction(reqObj *ManagedDeviceCollectionExecuteActionRequestParameter) *ManagedDeviceCollectionExecuteActionRequestBuilder {
	bb := &ManagedDeviceCollectionExecuteActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/executeAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

// ExecuteAction action undocumented
func (b *UserManagedDevicesCollectionRequestBuilder) ExecuteAction(reqObj *ManagedDeviceCollectionExecuteActionRequestParameter) *ManagedDeviceCollectionExecuteActionRequestBuilder {
	bb := &ManagedDeviceCollectionExecuteActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/executeAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceCollectionExecuteActionRequest struct{ BaseRequest }

//
func (b *ManagedDeviceCollectionExecuteActionRequestBuilder) Request() *ManagedDeviceCollectionExecuteActionRequest {
	return &ManagedDeviceCollectionExecuteActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceCollectionExecuteActionRequest) Post(ctx context.Context) (resObj *BulkManagedDeviceActionResult, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}

//
type ManagedAppPolicyTargetAppsRequestBuilder struct{ BaseRequestBuilder }

// TargetApps action undocumented
func (b *ManagedAppPolicyRequestBuilder) TargetApps(reqObj *ManagedAppPolicyTargetAppsRequestParameter) *ManagedAppPolicyTargetAppsRequestBuilder {
	bb := &ManagedAppPolicyTargetAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/targetApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedAppPolicyTargetAppsRequest struct{ BaseRequest }

//
func (b *ManagedAppPolicyTargetAppsRequestBuilder) Request() *ManagedAppPolicyTargetAppsRequest {
	return &ManagedAppPolicyTargetAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedAppPolicyTargetAppsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedAppProtectionTargetAppsRequestBuilder struct{ BaseRequestBuilder }

// TargetApps action undocumented
func (b *ManagedAppProtectionRequestBuilder) TargetApps(reqObj *ManagedAppProtectionTargetAppsRequestParameter) *ManagedAppProtectionTargetAppsRequestBuilder {
	bb := &ManagedAppProtectionTargetAppsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/targetApps"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedAppProtectionTargetAppsRequest struct{ BaseRequest }

//
func (b *ManagedAppProtectionTargetAppsRequestBuilder) Request() *ManagedAppProtectionTargetAppsRequest {
	return &ManagedAppProtectionTargetAppsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedAppProtectionTargetAppsRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceOverrideComplianceStateRequestBuilder struct{ BaseRequestBuilder }

// OverrideComplianceState action undocumented
func (b *ManagedDeviceRequestBuilder) OverrideComplianceState(reqObj *ManagedDeviceOverrideComplianceStateRequestParameter) *ManagedDeviceOverrideComplianceStateRequestBuilder {
	bb := &ManagedDeviceOverrideComplianceStateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/overrideComplianceState"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceOverrideComplianceStateRequest struct{ BaseRequest }

//
func (b *ManagedDeviceOverrideComplianceStateRequestBuilder) Request() *ManagedDeviceOverrideComplianceStateRequest {
	return &ManagedDeviceOverrideComplianceStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceOverrideComplianceStateRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceEnableLostModeRequestBuilder struct{ BaseRequestBuilder }

// EnableLostMode action undocumented
func (b *ManagedDeviceRequestBuilder) EnableLostMode(reqObj *ManagedDeviceEnableLostModeRequestParameter) *ManagedDeviceEnableLostModeRequestBuilder {
	bb := &ManagedDeviceEnableLostModeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/enableLostMode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceEnableLostModeRequest struct{ BaseRequest }

//
func (b *ManagedDeviceEnableLostModeRequestBuilder) Request() *ManagedDeviceEnableLostModeRequest {
	return &ManagedDeviceEnableLostModeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceEnableLostModeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDevicePlayLostModeSoundRequestBuilder struct{ BaseRequestBuilder }

// PlayLostModeSound action undocumented
func (b *ManagedDeviceRequestBuilder) PlayLostModeSound(reqObj *ManagedDevicePlayLostModeSoundRequestParameter) *ManagedDevicePlayLostModeSoundRequestBuilder {
	bb := &ManagedDevicePlayLostModeSoundRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/playLostModeSound"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDevicePlayLostModeSoundRequest struct{ BaseRequest }

//
func (b *ManagedDevicePlayLostModeSoundRequestBuilder) Request() *ManagedDevicePlayLostModeSoundRequest {
	return &ManagedDevicePlayLostModeSoundRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDevicePlayLostModeSoundRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceSetDeviceNameRequestBuilder struct{ BaseRequestBuilder }

// SetDeviceName action undocumented
func (b *ManagedDeviceRequestBuilder) SetDeviceName(reqObj *ManagedDeviceSetDeviceNameRequestParameter) *ManagedDeviceSetDeviceNameRequestBuilder {
	bb := &ManagedDeviceSetDeviceNameRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/setDeviceName"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceSetDeviceNameRequest struct{ BaseRequest }

//
func (b *ManagedDeviceSetDeviceNameRequestBuilder) Request() *ManagedDeviceSetDeviceNameRequest {
	return &ManagedDeviceSetDeviceNameRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceSetDeviceNameRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceRotateFileVaultKeyRequestBuilder struct{ BaseRequestBuilder }

// RotateFileVaultKey action undocumented
func (b *ManagedDeviceRequestBuilder) RotateFileVaultKey(reqObj *ManagedDeviceRotateFileVaultKeyRequestParameter) *ManagedDeviceRotateFileVaultKeyRequestBuilder {
	bb := &ManagedDeviceRotateFileVaultKeyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rotateFileVaultKey"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRotateFileVaultKeyRequest struct{ BaseRequest }

//
func (b *ManagedDeviceRotateFileVaultKeyRequestBuilder) Request() *ManagedDeviceRotateFileVaultKeyRequest {
	return &ManagedDeviceRotateFileVaultKeyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceRotateFileVaultKeyRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceRetireRequestBuilder struct{ BaseRequestBuilder }

// Retire action undocumented
func (b *ManagedDeviceRequestBuilder) Retire(reqObj *ManagedDeviceRetireRequestParameter) *ManagedDeviceRetireRequestBuilder {
	bb := &ManagedDeviceRetireRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/retire"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRetireRequest struct{ BaseRequest }

//
func (b *ManagedDeviceRetireRequestBuilder) Request() *ManagedDeviceRetireRequest {
	return &ManagedDeviceRetireRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceRetireRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceWipeRequestBuilder struct{ BaseRequestBuilder }

// Wipe action undocumented
func (b *ManagedDeviceRequestBuilder) Wipe(reqObj *ManagedDeviceWipeRequestParameter) *ManagedDeviceWipeRequestBuilder {
	bb := &ManagedDeviceWipeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/wipe"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceWipeRequest struct{ BaseRequest }

//
func (b *ManagedDeviceWipeRequestBuilder) Request() *ManagedDeviceWipeRequest {
	return &ManagedDeviceWipeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceWipeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceResetPasscodeRequestBuilder struct{ BaseRequestBuilder }

// ResetPasscode action undocumented
func (b *ManagedDeviceRequestBuilder) ResetPasscode(reqObj *ManagedDeviceResetPasscodeRequestParameter) *ManagedDeviceResetPasscodeRequestBuilder {
	bb := &ManagedDeviceResetPasscodeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/resetPasscode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceResetPasscodeRequest struct{ BaseRequest }

//
func (b *ManagedDeviceResetPasscodeRequestBuilder) Request() *ManagedDeviceResetPasscodeRequest {
	return &ManagedDeviceResetPasscodeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceResetPasscodeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceRemoteLockRequestBuilder struct{ BaseRequestBuilder }

// RemoteLock action undocumented
func (b *ManagedDeviceRequestBuilder) RemoteLock(reqObj *ManagedDeviceRemoteLockRequestParameter) *ManagedDeviceRemoteLockRequestBuilder {
	bb := &ManagedDeviceRemoteLockRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/remoteLock"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRemoteLockRequest struct{ BaseRequest }

//
func (b *ManagedDeviceRemoteLockRequestBuilder) Request() *ManagedDeviceRemoteLockRequest {
	return &ManagedDeviceRemoteLockRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceRemoteLockRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceRequestRemoteAssistanceRequestBuilder struct{ BaseRequestBuilder }

// RequestRemoteAssistance action undocumented
func (b *ManagedDeviceRequestBuilder) RequestRemoteAssistance(reqObj *ManagedDeviceRequestRemoteAssistanceRequestParameter) *ManagedDeviceRequestRemoteAssistanceRequestBuilder {
	bb := &ManagedDeviceRequestRemoteAssistanceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/requestRemoteAssistance"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRequestRemoteAssistanceRequest struct{ BaseRequest }

//
func (b *ManagedDeviceRequestRemoteAssistanceRequestBuilder) Request() *ManagedDeviceRequestRemoteAssistanceRequest {
	return &ManagedDeviceRequestRemoteAssistanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceRequestRemoteAssistanceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceDisableLostModeRequestBuilder struct{ BaseRequestBuilder }

// DisableLostMode action undocumented
func (b *ManagedDeviceRequestBuilder) DisableLostMode(reqObj *ManagedDeviceDisableLostModeRequestParameter) *ManagedDeviceDisableLostModeRequestBuilder {
	bb := &ManagedDeviceDisableLostModeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/disableLostMode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceDisableLostModeRequest struct{ BaseRequest }

//
func (b *ManagedDeviceDisableLostModeRequestBuilder) Request() *ManagedDeviceDisableLostModeRequest {
	return &ManagedDeviceDisableLostModeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceDisableLostModeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceLocateDeviceRequestBuilder struct{ BaseRequestBuilder }

// LocateDevice action undocumented
func (b *ManagedDeviceRequestBuilder) LocateDevice(reqObj *ManagedDeviceLocateDeviceRequestParameter) *ManagedDeviceLocateDeviceRequestBuilder {
	bb := &ManagedDeviceLocateDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/locateDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceLocateDeviceRequest struct{ BaseRequest }

//
func (b *ManagedDeviceLocateDeviceRequestBuilder) Request() *ManagedDeviceLocateDeviceRequest {
	return &ManagedDeviceLocateDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceLocateDeviceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceBypassActivationLockRequestBuilder struct{ BaseRequestBuilder }

// BypassActivationLock action undocumented
func (b *ManagedDeviceRequestBuilder) BypassActivationLock(reqObj *ManagedDeviceBypassActivationLockRequestParameter) *ManagedDeviceBypassActivationLockRequestBuilder {
	bb := &ManagedDeviceBypassActivationLockRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/bypassActivationLock"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceBypassActivationLockRequest struct{ BaseRequest }

//
func (b *ManagedDeviceBypassActivationLockRequestBuilder) Request() *ManagedDeviceBypassActivationLockRequest {
	return &ManagedDeviceBypassActivationLockRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceBypassActivationLockRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceRebootNowRequestBuilder struct{ BaseRequestBuilder }

// RebootNow action undocumented
func (b *ManagedDeviceRequestBuilder) RebootNow(reqObj *ManagedDeviceRebootNowRequestParameter) *ManagedDeviceRebootNowRequestBuilder {
	bb := &ManagedDeviceRebootNowRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rebootNow"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRebootNowRequest struct{ BaseRequest }

//
func (b *ManagedDeviceRebootNowRequestBuilder) Request() *ManagedDeviceRebootNowRequest {
	return &ManagedDeviceRebootNowRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceRebootNowRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceShutDownRequestBuilder struct{ BaseRequestBuilder }

// ShutDown action undocumented
func (b *ManagedDeviceRequestBuilder) ShutDown(reqObj *ManagedDeviceShutDownRequestParameter) *ManagedDeviceShutDownRequestBuilder {
	bb := &ManagedDeviceShutDownRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/shutDown"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceShutDownRequest struct{ BaseRequest }

//
func (b *ManagedDeviceShutDownRequestBuilder) Request() *ManagedDeviceShutDownRequest {
	return &ManagedDeviceShutDownRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceShutDownRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceRecoverPasscodeRequestBuilder struct{ BaseRequestBuilder }

// RecoverPasscode action undocumented
func (b *ManagedDeviceRequestBuilder) RecoverPasscode(reqObj *ManagedDeviceRecoverPasscodeRequestParameter) *ManagedDeviceRecoverPasscodeRequestBuilder {
	bb := &ManagedDeviceRecoverPasscodeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/recoverPasscode"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRecoverPasscodeRequest struct{ BaseRequest }

//
func (b *ManagedDeviceRecoverPasscodeRequestBuilder) Request() *ManagedDeviceRecoverPasscodeRequest {
	return &ManagedDeviceRecoverPasscodeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceRecoverPasscodeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceCleanWindowsDeviceRequestBuilder struct{ BaseRequestBuilder }

// CleanWindowsDevice action undocumented
func (b *ManagedDeviceRequestBuilder) CleanWindowsDevice(reqObj *ManagedDeviceCleanWindowsDeviceRequestParameter) *ManagedDeviceCleanWindowsDeviceRequestBuilder {
	bb := &ManagedDeviceCleanWindowsDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cleanWindowsDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceCleanWindowsDeviceRequest struct{ BaseRequest }

//
func (b *ManagedDeviceCleanWindowsDeviceRequestBuilder) Request() *ManagedDeviceCleanWindowsDeviceRequest {
	return &ManagedDeviceCleanWindowsDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceCleanWindowsDeviceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder struct{ BaseRequestBuilder }

// LogoutSharedAppleDeviceActiveUser action undocumented
func (b *ManagedDeviceRequestBuilder) LogoutSharedAppleDeviceActiveUser(reqObj *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestParameter) *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder {
	bb := &ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/logoutSharedAppleDeviceActiveUser"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest struct{ BaseRequest }

//
func (b *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequestBuilder) Request() *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest {
	return &ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceLogoutSharedAppleDeviceActiveUserRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder struct{ BaseRequestBuilder }

// DeleteUserFromSharedAppleDevice action undocumented
func (b *ManagedDeviceRequestBuilder) DeleteUserFromSharedAppleDevice(reqObj *ManagedDeviceDeleteUserFromSharedAppleDeviceRequestParameter) *ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder {
	bb := &ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/deleteUserFromSharedAppleDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceDeleteUserFromSharedAppleDeviceRequest struct{ BaseRequest }

//
func (b *ManagedDeviceDeleteUserFromSharedAppleDeviceRequestBuilder) Request() *ManagedDeviceDeleteUserFromSharedAppleDeviceRequest {
	return &ManagedDeviceDeleteUserFromSharedAppleDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceDeleteUserFromSharedAppleDeviceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceSyncDeviceRequestBuilder struct{ BaseRequestBuilder }

// SyncDevice action undocumented
func (b *ManagedDeviceRequestBuilder) SyncDevice(reqObj *ManagedDeviceSyncDeviceRequestParameter) *ManagedDeviceSyncDeviceRequestBuilder {
	bb := &ManagedDeviceSyncDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/syncDevice"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceSyncDeviceRequest struct{ BaseRequest }

//
func (b *ManagedDeviceSyncDeviceRequestBuilder) Request() *ManagedDeviceSyncDeviceRequest {
	return &ManagedDeviceSyncDeviceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceSyncDeviceRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceWindowsDefenderScanRequestBuilder struct{ BaseRequestBuilder }

// WindowsDefenderScan action undocumented
func (b *ManagedDeviceRequestBuilder) WindowsDefenderScan(reqObj *ManagedDeviceWindowsDefenderScanRequestParameter) *ManagedDeviceWindowsDefenderScanRequestBuilder {
	bb := &ManagedDeviceWindowsDefenderScanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/windowsDefenderScan"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceWindowsDefenderScanRequest struct{ BaseRequest }

//
func (b *ManagedDeviceWindowsDefenderScanRequestBuilder) Request() *ManagedDeviceWindowsDefenderScanRequest {
	return &ManagedDeviceWindowsDefenderScanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceWindowsDefenderScanRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder struct{ BaseRequestBuilder }

// WindowsDefenderUpdateSignatures action undocumented
func (b *ManagedDeviceRequestBuilder) WindowsDefenderUpdateSignatures(reqObj *ManagedDeviceWindowsDefenderUpdateSignaturesRequestParameter) *ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder {
	bb := &ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/windowsDefenderUpdateSignatures"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceWindowsDefenderUpdateSignaturesRequest struct{ BaseRequest }

//
func (b *ManagedDeviceWindowsDefenderUpdateSignaturesRequestBuilder) Request() *ManagedDeviceWindowsDefenderUpdateSignaturesRequest {
	return &ManagedDeviceWindowsDefenderUpdateSignaturesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceWindowsDefenderUpdateSignaturesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder struct{ BaseRequestBuilder }

// UpdateWindowsDeviceAccount action undocumented
func (b *ManagedDeviceRequestBuilder) UpdateWindowsDeviceAccount(reqObj *ManagedDeviceUpdateWindowsDeviceAccountRequestParameter) *ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder {
	bb := &ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/updateWindowsDeviceAccount"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceUpdateWindowsDeviceAccountRequest struct{ BaseRequest }

//
func (b *ManagedDeviceUpdateWindowsDeviceAccountRequestBuilder) Request() *ManagedDeviceUpdateWindowsDeviceAccountRequest {
	return &ManagedDeviceUpdateWindowsDeviceAccountRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceUpdateWindowsDeviceAccountRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceRevokeAppleVPPLicensesRequestBuilder struct{ BaseRequestBuilder }

// RevokeAppleVPPLicenses action undocumented
func (b *ManagedDeviceRequestBuilder) RevokeAppleVPPLicenses(reqObj *ManagedDeviceRevokeAppleVPPLicensesRequestParameter) *ManagedDeviceRevokeAppleVPPLicensesRequestBuilder {
	bb := &ManagedDeviceRevokeAppleVPPLicensesRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/revokeAppleVppLicenses"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRevokeAppleVPPLicensesRequest struct{ BaseRequest }

//
func (b *ManagedDeviceRevokeAppleVPPLicensesRequestBuilder) Request() *ManagedDeviceRevokeAppleVPPLicensesRequest {
	return &ManagedDeviceRevokeAppleVPPLicensesRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceRevokeAppleVPPLicensesRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceRotateBitLockerKeysRequestBuilder struct{ BaseRequestBuilder }

// RotateBitLockerKeys action undocumented
func (b *ManagedDeviceRequestBuilder) RotateBitLockerKeys(reqObj *ManagedDeviceRotateBitLockerKeysRequestParameter) *ManagedDeviceRotateBitLockerKeysRequestBuilder {
	bb := &ManagedDeviceRotateBitLockerKeysRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/rotateBitLockerKeys"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceRotateBitLockerKeysRequest struct{ BaseRequest }

//
func (b *ManagedDeviceRotateBitLockerKeysRequestBuilder) Request() *ManagedDeviceRotateBitLockerKeysRequest {
	return &ManagedDeviceRotateBitLockerKeysRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceRotateBitLockerKeysRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceSendCustomNotificationToCompanyPortalRequestBuilder struct{ BaseRequestBuilder }

// SendCustomNotificationToCompanyPortal action undocumented
func (b *ManagedDeviceRequestBuilder) SendCustomNotificationToCompanyPortal(reqObj *ManagedDeviceSendCustomNotificationToCompanyPortalRequestParameter) *ManagedDeviceSendCustomNotificationToCompanyPortalRequestBuilder {
	bb := &ManagedDeviceSendCustomNotificationToCompanyPortalRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/sendCustomNotificationToCompanyPortal"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceSendCustomNotificationToCompanyPortalRequest struct{ BaseRequest }

//
func (b *ManagedDeviceSendCustomNotificationToCompanyPortalRequestBuilder) Request() *ManagedDeviceSendCustomNotificationToCompanyPortalRequest {
	return &ManagedDeviceSendCustomNotificationToCompanyPortalRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceSendCustomNotificationToCompanyPortalRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceTriggerConfigurationManagerActionRequestBuilder struct{ BaseRequestBuilder }

// TriggerConfigurationManagerAction action undocumented
func (b *ManagedDeviceRequestBuilder) TriggerConfigurationManagerAction(reqObj *ManagedDeviceTriggerConfigurationManagerActionRequestParameter) *ManagedDeviceTriggerConfigurationManagerActionRequestBuilder {
	bb := &ManagedDeviceTriggerConfigurationManagerActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/triggerConfigurationManagerAction"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceTriggerConfigurationManagerActionRequest struct{ BaseRequest }

//
func (b *ManagedDeviceTriggerConfigurationManagerActionRequestBuilder) Request() *ManagedDeviceTriggerConfigurationManagerActionRequest {
	return &ManagedDeviceTriggerConfigurationManagerActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceTriggerConfigurationManagerActionRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedDeviceMobileAppConfigurationAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumented
func (b *ManagedDeviceMobileAppConfigurationRequestBuilder) Assign(reqObj *ManagedDeviceMobileAppConfigurationAssignRequestParameter) *ManagedDeviceMobileAppConfigurationAssignRequestBuilder {
	bb := &ManagedDeviceMobileAppConfigurationAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedDeviceMobileAppConfigurationAssignRequest struct{ BaseRequest }

//
func (b *ManagedDeviceMobileAppConfigurationAssignRequestBuilder) Request() *ManagedDeviceMobileAppConfigurationAssignRequest {
	return &ManagedDeviceMobileAppConfigurationAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedDeviceMobileAppConfigurationAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type ManagedEBookAssignRequestBuilder struct{ BaseRequestBuilder }

// Assign action undocumented
func (b *ManagedEBookRequestBuilder) Assign(reqObj *ManagedEBookAssignRequestParameter) *ManagedEBookAssignRequestBuilder {
	bb := &ManagedEBookAssignRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/assign"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ManagedEBookAssignRequest struct{ BaseRequest }

//
func (b *ManagedEBookAssignRequestBuilder) Request() *ManagedEBookAssignRequest {
	return &ManagedEBookAssignRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ManagedEBookAssignRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
