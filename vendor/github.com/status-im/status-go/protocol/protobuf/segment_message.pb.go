// Code generated by protoc-gen-go. DO NOT EDIT.
// source: segment_message.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SegmentMessage struct {
	// hash of the entire original message
	EntireMessageHash []byte `protobuf:"bytes,1,opt,name=entire_message_hash,json=entireMessageHash,proto3" json:"entire_message_hash,omitempty"`
	// Index of this segment within the entire original message
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	// Total number of segments the entire original message is divided into
	SegmentsCount uint32 `protobuf:"varint,3,opt,name=segments_count,json=segmentsCount,proto3" json:"segments_count,omitempty"`
	// The payload data for this particular segment
	Payload              []byte   `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentMessage) Reset()         { *m = SegmentMessage{} }
func (m *SegmentMessage) String() string { return proto.CompactTextString(m) }
func (*SegmentMessage) ProtoMessage()    {}
func (*SegmentMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_857302809a887a8b, []int{0}
}

func (m *SegmentMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentMessage.Unmarshal(m, b)
}
func (m *SegmentMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentMessage.Marshal(b, m, deterministic)
}
func (m *SegmentMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentMessage.Merge(m, src)
}
func (m *SegmentMessage) XXX_Size() int {
	return xxx_messageInfo_SegmentMessage.Size(m)
}
func (m *SegmentMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentMessage proto.InternalMessageInfo

func (m *SegmentMessage) GetEntireMessageHash() []byte {
	if m != nil {
		return m.EntireMessageHash
	}
	return nil
}

func (m *SegmentMessage) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SegmentMessage) GetSegmentsCount() uint32 {
	if m != nil {
		return m.SegmentsCount
	}
	return 0
}

func (m *SegmentMessage) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*SegmentMessage)(nil), "protobuf.SegmentMessage")
}

func init() {
	proto.RegisterFile("segment_message.proto", fileDescriptor_857302809a887a8b)
}

var fileDescriptor_857302809a887a8b = []byte{
	// 169 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x4e, 0x4d, 0xcf,
	0x4d, 0xcd, 0x2b, 0x89, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69, 0x4a, 0xd3, 0x19, 0xb9, 0xf8, 0x82, 0x21, 0x6a,
	0x7c, 0x21, 0x4a, 0x84, 0xf4, 0xb8, 0x84, 0x53, 0xf3, 0x4a, 0x32, 0x8b, 0x52, 0x61, 0x9a, 0xe2,
	0x33, 0x12, 0x8b, 0x33, 0x24, 0x18, 0x15, 0x18, 0x35, 0x78, 0x82, 0x04, 0x21, 0x52, 0x50, 0xb5,
	0x1e, 0x89, 0xc5, 0x19, 0x42, 0x22, 0x5c, 0xac, 0x99, 0x79, 0x29, 0xa9, 0x15, 0x12, 0x4c, 0x0a,
	0x8c, 0x1a, 0xbc, 0x41, 0x10, 0x8e, 0x90, 0x2a, 0x17, 0x1f, 0xd4, 0xee, 0xe2, 0xf8, 0xe4, 0xfc,
	0xd2, 0xbc, 0x12, 0x09, 0x66, 0xb0, 0x34, 0x2f, 0x4c, 0xd4, 0x19, 0x24, 0x28, 0x24, 0xc1, 0xc5,
	0x5e, 0x90, 0x58, 0x99, 0x93, 0x9f, 0x98, 0x22, 0xc1, 0x02, 0xb6, 0x00, 0xc6, 0x75, 0xe2, 0x8d,
	0xe2, 0xd6, 0xd3, 0xb7, 0x86, 0x39, 0x34, 0x89, 0x0d, 0xcc, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x12, 0x40, 0x55, 0x2e, 0xd2, 0x00, 0x00, 0x00,
}
