// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.20.3
// source: profile_showcase.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProfileShowcaseVisibility int32

const (
	ProfileShowcaseVisibility_PROFILE_SHOWCASE_VISIBILITY_NO_ONE              ProfileShowcaseVisibility = 0
	ProfileShowcaseVisibility_PROFILE_SHOWCASE_VISIBILITY_IDVERIFIED_CONTACTS ProfileShowcaseVisibility = 1
	ProfileShowcaseVisibility_PROFILE_SHOWCASE_VISIBILITY_CONTACTS            ProfileShowcaseVisibility = 2
	ProfileShowcaseVisibility_PROFILE_SHOWCASE_VISIBILITY_EVERYONE            ProfileShowcaseVisibility = 3
)

// Enum value maps for ProfileShowcaseVisibility.
var (
	ProfileShowcaseVisibility_name = map[int32]string{
		0: "PROFILE_SHOWCASE_VISIBILITY_NO_ONE",
		1: "PROFILE_SHOWCASE_VISIBILITY_IDVERIFIED_CONTACTS",
		2: "PROFILE_SHOWCASE_VISIBILITY_CONTACTS",
		3: "PROFILE_SHOWCASE_VISIBILITY_EVERYONE",
	}
	ProfileShowcaseVisibility_value = map[string]int32{
		"PROFILE_SHOWCASE_VISIBILITY_NO_ONE":              0,
		"PROFILE_SHOWCASE_VISIBILITY_IDVERIFIED_CONTACTS": 1,
		"PROFILE_SHOWCASE_VISIBILITY_CONTACTS":            2,
		"PROFILE_SHOWCASE_VISIBILITY_EVERYONE":            3,
	}
)

func (x ProfileShowcaseVisibility) Enum() *ProfileShowcaseVisibility {
	p := new(ProfileShowcaseVisibility)
	*p = x
	return p
}

func (x ProfileShowcaseVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProfileShowcaseVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_profile_showcase_proto_enumTypes[0].Descriptor()
}

func (ProfileShowcaseVisibility) Type() protoreflect.EnumType {
	return &file_profile_showcase_proto_enumTypes[0]
}

func (x ProfileShowcaseVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProfileShowcaseVisibility.Descriptor instead.
func (ProfileShowcaseVisibility) EnumDescriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{0}
}

type ProfileShowcaseCommunity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommunityId string `protobuf:"bytes,1,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	Order       uint32 `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	Grant       []byte `protobuf:"bytes,3,opt,name=grant,proto3" json:"grant,omitempty"`
}

func (x *ProfileShowcaseCommunity) Reset() {
	*x = ProfileShowcaseCommunity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseCommunity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseCommunity) ProtoMessage() {}

func (x *ProfileShowcaseCommunity) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseCommunity.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseCommunity) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{0}
}

func (x *ProfileShowcaseCommunity) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *ProfileShowcaseCommunity) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProfileShowcaseCommunity) GetGrant() []byte {
	if x != nil {
		return x.Grant
	}
	return nil
}

type ProfileShowcaseAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ColorId string `protobuf:"bytes,3,opt,name=color_id,json=colorId,proto3" json:"color_id,omitempty"`
	Emoji   string `protobuf:"bytes,4,opt,name=emoji,proto3" json:"emoji,omitempty"`
	Order   uint32 `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ProfileShowcaseAccount) Reset() {
	*x = ProfileShowcaseAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseAccount) ProtoMessage() {}

func (x *ProfileShowcaseAccount) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseAccount.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseAccount) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{1}
}

func (x *ProfileShowcaseAccount) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ProfileShowcaseAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProfileShowcaseAccount) GetColorId() string {
	if x != nil {
		return x.ColorId
	}
	return ""
}

func (x *ProfileShowcaseAccount) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

func (x *ProfileShowcaseAccount) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProfileShowcaseCollectible struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in profile_showcase.proto.
	Uid             string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Order           uint32 `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	ContractAddress string `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// Deprecated: Marked as deprecated in profile_showcase.proto.
	CommunityId string `protobuf:"bytes,4,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	ChainId     uint64 `protobuf:"varint,5,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	TokenId     string `protobuf:"bytes,6,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	// Deprecated: Marked as deprecated in profile_showcase.proto.
	AccountAddress string `protobuf:"bytes,7,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
}

func (x *ProfileShowcaseCollectible) Reset() {
	*x = ProfileShowcaseCollectible{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseCollectible) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseCollectible) ProtoMessage() {}

func (x *ProfileShowcaseCollectible) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseCollectible.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseCollectible) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{2}
}

// Deprecated: Marked as deprecated in profile_showcase.proto.
func (x *ProfileShowcaseCollectible) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ProfileShowcaseCollectible) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProfileShowcaseCollectible) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

// Deprecated: Marked as deprecated in profile_showcase.proto.
func (x *ProfileShowcaseCollectible) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *ProfileShowcaseCollectible) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ProfileShowcaseCollectible) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

// Deprecated: Marked as deprecated in profile_showcase.proto.
func (x *ProfileShowcaseCollectible) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

type ProfileShowcaseVerifiedToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Order  uint32 `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ProfileShowcaseVerifiedToken) Reset() {
	*x = ProfileShowcaseVerifiedToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseVerifiedToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseVerifiedToken) ProtoMessage() {}

func (x *ProfileShowcaseVerifiedToken) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseVerifiedToken.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseVerifiedToken) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{3}
}

func (x *ProfileShowcaseVerifiedToken) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ProfileShowcaseVerifiedToken) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProfileShowcaseUnverifiedToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Order           uint32 `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	ChainId         uint64 `protobuf:"varint,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Deprecated: Marked as deprecated in profile_showcase.proto.
	CommunityId string `protobuf:"bytes,4,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
}

func (x *ProfileShowcaseUnverifiedToken) Reset() {
	*x = ProfileShowcaseUnverifiedToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseUnverifiedToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseUnverifiedToken) ProtoMessage() {}

func (x *ProfileShowcaseUnverifiedToken) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseUnverifiedToken.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseUnverifiedToken) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{4}
}

func (x *ProfileShowcaseUnverifiedToken) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *ProfileShowcaseUnverifiedToken) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProfileShowcaseUnverifiedToken) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

// Deprecated: Marked as deprecated in profile_showcase.proto.
func (x *ProfileShowcaseUnverifiedToken) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

type ProfileShowcaseSocialLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url   string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Order uint32 `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	Text  string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ProfileShowcaseSocialLink) Reset() {
	*x = ProfileShowcaseSocialLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseSocialLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseSocialLink) ProtoMessage() {}

func (x *ProfileShowcaseSocialLink) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseSocialLink.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseSocialLink) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{5}
}

func (x *ProfileShowcaseSocialLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ProfileShowcaseSocialLink) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProfileShowcaseSocialLink) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ProfileShowcaseEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Communities      []*ProfileShowcaseCommunity       `protobuf:"bytes,1,rep,name=communities,proto3" json:"communities,omitempty"`
	Accounts         []*ProfileShowcaseAccount         `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Collectibles     []*ProfileShowcaseCollectible     `protobuf:"bytes,3,rep,name=collectibles,proto3" json:"collectibles,omitempty"`
	VerifiedTokens   []*ProfileShowcaseVerifiedToken   `protobuf:"bytes,4,rep,name=verified_tokens,json=verifiedTokens,proto3" json:"verified_tokens,omitempty"`
	UnverifiedTokens []*ProfileShowcaseUnverifiedToken `protobuf:"bytes,5,rep,name=unverified_tokens,json=unverifiedTokens,proto3" json:"unverified_tokens,omitempty"`
	SocialLinks      []*ProfileShowcaseSocialLink      `protobuf:"bytes,6,rep,name=social_links,json=socialLinks,proto3" json:"social_links,omitempty"`
}

func (x *ProfileShowcaseEntries) Reset() {
	*x = ProfileShowcaseEntries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseEntries) ProtoMessage() {}

func (x *ProfileShowcaseEntries) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseEntries.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseEntries) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{6}
}

func (x *ProfileShowcaseEntries) GetCommunities() []*ProfileShowcaseCommunity {
	if x != nil {
		return x.Communities
	}
	return nil
}

func (x *ProfileShowcaseEntries) GetAccounts() []*ProfileShowcaseAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *ProfileShowcaseEntries) GetCollectibles() []*ProfileShowcaseCollectible {
	if x != nil {
		return x.Collectibles
	}
	return nil
}

func (x *ProfileShowcaseEntries) GetVerifiedTokens() []*ProfileShowcaseVerifiedToken {
	if x != nil {
		return x.VerifiedTokens
	}
	return nil
}

func (x *ProfileShowcaseEntries) GetUnverifiedTokens() []*ProfileShowcaseUnverifiedToken {
	if x != nil {
		return x.UnverifiedTokens
	}
	return nil
}

func (x *ProfileShowcaseEntries) GetSocialLinks() []*ProfileShowcaseSocialLink {
	if x != nil {
		return x.SocialLinks
	}
	return nil
}

type ProfileShowcaseEntriesEncrypted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptedEntries []byte   `protobuf:"bytes,1,opt,name=encrypted_entries,json=encryptedEntries,proto3" json:"encrypted_entries,omitempty"`
	EncryptionKeys   [][]byte `protobuf:"bytes,2,rep,name=encryption_keys,json=encryptionKeys,proto3" json:"encryption_keys,omitempty"`
}

func (x *ProfileShowcaseEntriesEncrypted) Reset() {
	*x = ProfileShowcaseEntriesEncrypted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseEntriesEncrypted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseEntriesEncrypted) ProtoMessage() {}

func (x *ProfileShowcaseEntriesEncrypted) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseEntriesEncrypted.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseEntriesEncrypted) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{7}
}

func (x *ProfileShowcaseEntriesEncrypted) GetEncryptedEntries() []byte {
	if x != nil {
		return x.EncryptedEntries
	}
	return nil
}

func (x *ProfileShowcaseEntriesEncrypted) GetEncryptionKeys() [][]byte {
	if x != nil {
		return x.EncryptionKeys
	}
	return nil
}

type ProfileShowcase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForEveryone           *ProfileShowcaseEntries          `protobuf:"bytes,1,opt,name=for_everyone,json=forEveryone,proto3" json:"for_everyone,omitempty"`
	ForContacts           *ProfileShowcaseEntriesEncrypted `protobuf:"bytes,2,opt,name=for_contacts,json=forContacts,proto3" json:"for_contacts,omitempty"`
	ForIdVerifiedContacts *ProfileShowcaseEntriesEncrypted `protobuf:"bytes,3,opt,name=for_id_verified_contacts,json=forIdVerifiedContacts,proto3" json:"for_id_verified_contacts,omitempty"`
}

func (x *ProfileShowcase) Reset() {
	*x = ProfileShowcase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcase) ProtoMessage() {}

func (x *ProfileShowcase) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcase.ProtoReflect.Descriptor instead.
func (*ProfileShowcase) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{8}
}

func (x *ProfileShowcase) GetForEveryone() *ProfileShowcaseEntries {
	if x != nil {
		return x.ForEveryone
	}
	return nil
}

func (x *ProfileShowcase) GetForContacts() *ProfileShowcaseEntriesEncrypted {
	if x != nil {
		return x.ForContacts
	}
	return nil
}

func (x *ProfileShowcase) GetForIdVerifiedContacts() *ProfileShowcaseEntriesEncrypted {
	if x != nil {
		return x.ForIdVerifiedContacts
	}
	return nil
}

type ProfileShowcaseCommunityPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommunityId        string                    `protobuf:"bytes,1,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	ShowcaseVisibility ProfileShowcaseVisibility `protobuf:"varint,2,opt,name=showcase_visibility,json=showcaseVisibility,proto3,enum=protobuf.ProfileShowcaseVisibility" json:"showcase_visibility,omitempty"`
	Order              uint32                    `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ProfileShowcaseCommunityPreference) Reset() {
	*x = ProfileShowcaseCommunityPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseCommunityPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseCommunityPreference) ProtoMessage() {}

func (x *ProfileShowcaseCommunityPreference) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseCommunityPreference.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseCommunityPreference) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{9}
}

func (x *ProfileShowcaseCommunityPreference) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *ProfileShowcaseCommunityPreference) GetShowcaseVisibility() ProfileShowcaseVisibility {
	if x != nil {
		return x.ShowcaseVisibility
	}
	return ProfileShowcaseVisibility_PROFILE_SHOWCASE_VISIBILITY_NO_ONE
}

func (x *ProfileShowcaseCommunityPreference) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProfileShowcaseAccountPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Deprecated: Marked as deprecated in profile_showcase.proto.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Deprecated: Marked as deprecated in profile_showcase.proto.
	ColorId string `protobuf:"bytes,3,opt,name=color_id,json=colorId,proto3" json:"color_id,omitempty"`
	// Deprecated: Marked as deprecated in profile_showcase.proto.
	Emoji              string                    `protobuf:"bytes,4,opt,name=emoji,proto3" json:"emoji,omitempty"`
	ShowcaseVisibility ProfileShowcaseVisibility `protobuf:"varint,5,opt,name=showcase_visibility,json=showcaseVisibility,proto3,enum=protobuf.ProfileShowcaseVisibility" json:"showcase_visibility,omitempty"`
	Order              uint32                    `protobuf:"varint,6,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ProfileShowcaseAccountPreference) Reset() {
	*x = ProfileShowcaseAccountPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseAccountPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseAccountPreference) ProtoMessage() {}

func (x *ProfileShowcaseAccountPreference) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseAccountPreference.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseAccountPreference) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{10}
}

func (x *ProfileShowcaseAccountPreference) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Deprecated: Marked as deprecated in profile_showcase.proto.
func (x *ProfileShowcaseAccountPreference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deprecated: Marked as deprecated in profile_showcase.proto.
func (x *ProfileShowcaseAccountPreference) GetColorId() string {
	if x != nil {
		return x.ColorId
	}
	return ""
}

// Deprecated: Marked as deprecated in profile_showcase.proto.
func (x *ProfileShowcaseAccountPreference) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

func (x *ProfileShowcaseAccountPreference) GetShowcaseVisibility() ProfileShowcaseVisibility {
	if x != nil {
		return x.ShowcaseVisibility
	}
	return ProfileShowcaseVisibility_PROFILE_SHOWCASE_VISIBILITY_NO_ONE
}

func (x *ProfileShowcaseAccountPreference) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProfileShowcaseCollectiblePreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	ChainId         uint64 `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	TokenId         string `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	// Deprecated: Marked as deprecated in profile_showcase.proto.
	CommunityId string `protobuf:"bytes,4,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	// Deprecated: Marked as deprecated in profile_showcase.proto.
	AccountAddress     string                    `protobuf:"bytes,5,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
	ShowcaseVisibility ProfileShowcaseVisibility `protobuf:"varint,6,opt,name=showcase_visibility,json=showcaseVisibility,proto3,enum=protobuf.ProfileShowcaseVisibility" json:"showcase_visibility,omitempty"`
	Order              uint32                    `protobuf:"varint,7,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ProfileShowcaseCollectiblePreference) Reset() {
	*x = ProfileShowcaseCollectiblePreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseCollectiblePreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseCollectiblePreference) ProtoMessage() {}

func (x *ProfileShowcaseCollectiblePreference) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseCollectiblePreference.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseCollectiblePreference) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{11}
}

func (x *ProfileShowcaseCollectiblePreference) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *ProfileShowcaseCollectiblePreference) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ProfileShowcaseCollectiblePreference) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

// Deprecated: Marked as deprecated in profile_showcase.proto.
func (x *ProfileShowcaseCollectiblePreference) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

// Deprecated: Marked as deprecated in profile_showcase.proto.
func (x *ProfileShowcaseCollectiblePreference) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *ProfileShowcaseCollectiblePreference) GetShowcaseVisibility() ProfileShowcaseVisibility {
	if x != nil {
		return x.ShowcaseVisibility
	}
	return ProfileShowcaseVisibility_PROFILE_SHOWCASE_VISIBILITY_NO_ONE
}

func (x *ProfileShowcaseCollectiblePreference) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProfileShowcaseVerifiedTokenPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol             string                    `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ShowcaseVisibility ProfileShowcaseVisibility `protobuf:"varint,2,opt,name=showcase_visibility,json=showcaseVisibility,proto3,enum=protobuf.ProfileShowcaseVisibility" json:"showcase_visibility,omitempty"`
	Order              uint32                    `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ProfileShowcaseVerifiedTokenPreference) Reset() {
	*x = ProfileShowcaseVerifiedTokenPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseVerifiedTokenPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseVerifiedTokenPreference) ProtoMessage() {}

func (x *ProfileShowcaseVerifiedTokenPreference) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseVerifiedTokenPreference.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseVerifiedTokenPreference) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{12}
}

func (x *ProfileShowcaseVerifiedTokenPreference) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ProfileShowcaseVerifiedTokenPreference) GetShowcaseVisibility() ProfileShowcaseVisibility {
	if x != nil {
		return x.ShowcaseVisibility
	}
	return ProfileShowcaseVisibility_PROFILE_SHOWCASE_VISIBILITY_NO_ONE
}

func (x *ProfileShowcaseVerifiedTokenPreference) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProfileShowcaseUnverifiedTokenPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	ChainId         uint64 `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Deprecated: Marked as deprecated in profile_showcase.proto.
	CommunityId        string                    `protobuf:"bytes,3,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	ShowcaseVisibility ProfileShowcaseVisibility `protobuf:"varint,4,opt,name=showcase_visibility,json=showcaseVisibility,proto3,enum=protobuf.ProfileShowcaseVisibility" json:"showcase_visibility,omitempty"`
	Order              uint32                    `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ProfileShowcaseUnverifiedTokenPreference) Reset() {
	*x = ProfileShowcaseUnverifiedTokenPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseUnverifiedTokenPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseUnverifiedTokenPreference) ProtoMessage() {}

func (x *ProfileShowcaseUnverifiedTokenPreference) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseUnverifiedTokenPreference.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseUnverifiedTokenPreference) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{13}
}

func (x *ProfileShowcaseUnverifiedTokenPreference) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *ProfileShowcaseUnverifiedTokenPreference) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

// Deprecated: Marked as deprecated in profile_showcase.proto.
func (x *ProfileShowcaseUnverifiedTokenPreference) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *ProfileShowcaseUnverifiedTokenPreference) GetShowcaseVisibility() ProfileShowcaseVisibility {
	if x != nil {
		return x.ShowcaseVisibility
	}
	return ProfileShowcaseVisibility_PROFILE_SHOWCASE_VISIBILITY_NO_ONE
}

func (x *ProfileShowcaseUnverifiedTokenPreference) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProfileShowcaseSocialLinkPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                string                    `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Text               string                    `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Order              uint32                    `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	ShowcaseVisibility ProfileShowcaseVisibility `protobuf:"varint,4,opt,name=showcase_visibility,json=showcaseVisibility,proto3,enum=protobuf.ProfileShowcaseVisibility" json:"showcase_visibility,omitempty"`
}

func (x *ProfileShowcaseSocialLinkPreference) Reset() {
	*x = ProfileShowcaseSocialLinkPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileShowcaseSocialLinkPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShowcaseSocialLinkPreference) ProtoMessage() {}

func (x *ProfileShowcaseSocialLinkPreference) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileShowcaseSocialLinkPreference.ProtoReflect.Descriptor instead.
func (*ProfileShowcaseSocialLinkPreference) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{14}
}

func (x *ProfileShowcaseSocialLinkPreference) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ProfileShowcaseSocialLinkPreference) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ProfileShowcaseSocialLinkPreference) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProfileShowcaseSocialLinkPreference) GetShowcaseVisibility() ProfileShowcaseVisibility {
	if x != nil {
		return x.ShowcaseVisibility
	}
	return ProfileShowcaseVisibility_PROFILE_SHOWCASE_VISIBILITY_NO_ONE
}

type SyncProfileShowcasePreferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock            uint64                                      `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Communities      []*ProfileShowcaseCommunityPreference       `protobuf:"bytes,2,rep,name=communities,proto3" json:"communities,omitempty"`
	Accounts         []*ProfileShowcaseAccountPreference         `protobuf:"bytes,3,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Collectibles     []*ProfileShowcaseCollectiblePreference     `protobuf:"bytes,4,rep,name=collectibles,proto3" json:"collectibles,omitempty"`
	VerifiedTokens   []*ProfileShowcaseVerifiedTokenPreference   `protobuf:"bytes,5,rep,name=verified_tokens,json=verifiedTokens,proto3" json:"verified_tokens,omitempty"`
	UnverifiedTokens []*ProfileShowcaseUnverifiedTokenPreference `protobuf:"bytes,6,rep,name=unverified_tokens,json=unverifiedTokens,proto3" json:"unverified_tokens,omitempty"`
	SocialLinks      []*ProfileShowcaseSocialLinkPreference      `protobuf:"bytes,7,rep,name=social_links,json=socialLinks,proto3" json:"social_links,omitempty"`
}

func (x *SyncProfileShowcasePreferences) Reset() {
	*x = SyncProfileShowcasePreferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_profile_showcase_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncProfileShowcasePreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncProfileShowcasePreferences) ProtoMessage() {}

func (x *SyncProfileShowcasePreferences) ProtoReflect() protoreflect.Message {
	mi := &file_profile_showcase_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncProfileShowcasePreferences.ProtoReflect.Descriptor instead.
func (*SyncProfileShowcasePreferences) Descriptor() ([]byte, []int) {
	return file_profile_showcase_proto_rawDescGZIP(), []int{15}
}

func (x *SyncProfileShowcasePreferences) GetClock() uint64 {
	if x != nil {
		return x.Clock
	}
	return 0
}

func (x *SyncProfileShowcasePreferences) GetCommunities() []*ProfileShowcaseCommunityPreference {
	if x != nil {
		return x.Communities
	}
	return nil
}

func (x *SyncProfileShowcasePreferences) GetAccounts() []*ProfileShowcaseAccountPreference {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *SyncProfileShowcasePreferences) GetCollectibles() []*ProfileShowcaseCollectiblePreference {
	if x != nil {
		return x.Collectibles
	}
	return nil
}

func (x *SyncProfileShowcasePreferences) GetVerifiedTokens() []*ProfileShowcaseVerifiedTokenPreference {
	if x != nil {
		return x.VerifiedTokens
	}
	return nil
}

func (x *SyncProfileShowcasePreferences) GetUnverifiedTokens() []*ProfileShowcaseUnverifiedTokenPreference {
	if x != nil {
		return x.UnverifiedTokens
	}
	return nil
}

func (x *SyncProfileShowcasePreferences) GetSocialLinks() []*ProfileShowcaseSocialLinkPreference {
	if x != nil {
		return x.SocialLinks
	}
	return nil
}

var File_profile_showcase_proto protoreflect.FileDescriptor

var file_profile_showcase_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x22, 0x69, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x22, 0x8d, 0x01,
	0x0a, 0x16, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xfd, 0x01,
	0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4c, 0x0a,
	0x1c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x1e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x55,
	0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0x57, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xd6, 0x03, 0x0a, 0x16, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x12, 0x55, 0x0a, 0x11, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x55, 0x6e, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x10, 0x75, 0x6e, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x22, 0x77, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0e, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x88, 0x02, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x72, 0x79, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x45, 0x76, 0x65,
	0x72, 0x79, 0x6f, 0x6e, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x12, 0x62, 0x0a, 0x18, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x52, 0x15, 0x66, 0x6f, 0x72, 0x49, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x22, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x54, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xf9, 0x01,
	0x0a, 0x20, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x54, 0x0a,
	0x13, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x12, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xc7, 0x02, 0x0a, 0x24, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x54, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0xac, 0x01, 0x0a, 0x26, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x54, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0x83, 0x02, 0x0a, 0x28, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x55, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x13,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x12,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xb7, 0x01, 0x0a, 0x23, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x13,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x12,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x22, 0xb0, 0x04, 0x0a, 0x1e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x4e, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x12, 0x5f, 0x0a, 0x11, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x55, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x10, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x2a, 0xcc, 0x01, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x22, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53,
	0x48, 0x4f, 0x57, 0x43, 0x41, 0x53, 0x45, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49,
	0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x33, 0x0a, 0x2f, 0x50,
	0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x48, 0x4f, 0x57, 0x43, 0x41, 0x53, 0x45, 0x5f,
	0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x56, 0x45, 0x52,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x53, 0x10, 0x01,
	0x12, 0x28, 0x0a, 0x24, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x48, 0x4f, 0x57,
	0x43, 0x41, 0x53, 0x45, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f,
	0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x53, 0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x50, 0x52,
	0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x48, 0x4f, 0x57, 0x43, 0x41, 0x53, 0x45, 0x5f, 0x56,
	0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x56, 0x45, 0x52, 0x59, 0x4f,
	0x4e, 0x45, 0x10, 0x03, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_profile_showcase_proto_rawDescOnce sync.Once
	file_profile_showcase_proto_rawDescData = file_profile_showcase_proto_rawDesc
)

func file_profile_showcase_proto_rawDescGZIP() []byte {
	file_profile_showcase_proto_rawDescOnce.Do(func() {
		file_profile_showcase_proto_rawDescData = protoimpl.X.CompressGZIP(file_profile_showcase_proto_rawDescData)
	})
	return file_profile_showcase_proto_rawDescData
}

var file_profile_showcase_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_profile_showcase_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_profile_showcase_proto_goTypes = []interface{}{
	(ProfileShowcaseVisibility)(0),                   // 0: protobuf.ProfileShowcaseVisibility
	(*ProfileShowcaseCommunity)(nil),                 // 1: protobuf.ProfileShowcaseCommunity
	(*ProfileShowcaseAccount)(nil),                   // 2: protobuf.ProfileShowcaseAccount
	(*ProfileShowcaseCollectible)(nil),               // 3: protobuf.ProfileShowcaseCollectible
	(*ProfileShowcaseVerifiedToken)(nil),             // 4: protobuf.ProfileShowcaseVerifiedToken
	(*ProfileShowcaseUnverifiedToken)(nil),           // 5: protobuf.ProfileShowcaseUnverifiedToken
	(*ProfileShowcaseSocialLink)(nil),                // 6: protobuf.ProfileShowcaseSocialLink
	(*ProfileShowcaseEntries)(nil),                   // 7: protobuf.ProfileShowcaseEntries
	(*ProfileShowcaseEntriesEncrypted)(nil),          // 8: protobuf.ProfileShowcaseEntriesEncrypted
	(*ProfileShowcase)(nil),                          // 9: protobuf.ProfileShowcase
	(*ProfileShowcaseCommunityPreference)(nil),       // 10: protobuf.ProfileShowcaseCommunityPreference
	(*ProfileShowcaseAccountPreference)(nil),         // 11: protobuf.ProfileShowcaseAccountPreference
	(*ProfileShowcaseCollectiblePreference)(nil),     // 12: protobuf.ProfileShowcaseCollectiblePreference
	(*ProfileShowcaseVerifiedTokenPreference)(nil),   // 13: protobuf.ProfileShowcaseVerifiedTokenPreference
	(*ProfileShowcaseUnverifiedTokenPreference)(nil), // 14: protobuf.ProfileShowcaseUnverifiedTokenPreference
	(*ProfileShowcaseSocialLinkPreference)(nil),      // 15: protobuf.ProfileShowcaseSocialLinkPreference
	(*SyncProfileShowcasePreferences)(nil),           // 16: protobuf.SyncProfileShowcasePreferences
}
var file_profile_showcase_proto_depIdxs = []int32{
	1,  // 0: protobuf.ProfileShowcaseEntries.communities:type_name -> protobuf.ProfileShowcaseCommunity
	2,  // 1: protobuf.ProfileShowcaseEntries.accounts:type_name -> protobuf.ProfileShowcaseAccount
	3,  // 2: protobuf.ProfileShowcaseEntries.collectibles:type_name -> protobuf.ProfileShowcaseCollectible
	4,  // 3: protobuf.ProfileShowcaseEntries.verified_tokens:type_name -> protobuf.ProfileShowcaseVerifiedToken
	5,  // 4: protobuf.ProfileShowcaseEntries.unverified_tokens:type_name -> protobuf.ProfileShowcaseUnverifiedToken
	6,  // 5: protobuf.ProfileShowcaseEntries.social_links:type_name -> protobuf.ProfileShowcaseSocialLink
	7,  // 6: protobuf.ProfileShowcase.for_everyone:type_name -> protobuf.ProfileShowcaseEntries
	8,  // 7: protobuf.ProfileShowcase.for_contacts:type_name -> protobuf.ProfileShowcaseEntriesEncrypted
	8,  // 8: protobuf.ProfileShowcase.for_id_verified_contacts:type_name -> protobuf.ProfileShowcaseEntriesEncrypted
	0,  // 9: protobuf.ProfileShowcaseCommunityPreference.showcase_visibility:type_name -> protobuf.ProfileShowcaseVisibility
	0,  // 10: protobuf.ProfileShowcaseAccountPreference.showcase_visibility:type_name -> protobuf.ProfileShowcaseVisibility
	0,  // 11: protobuf.ProfileShowcaseCollectiblePreference.showcase_visibility:type_name -> protobuf.ProfileShowcaseVisibility
	0,  // 12: protobuf.ProfileShowcaseVerifiedTokenPreference.showcase_visibility:type_name -> protobuf.ProfileShowcaseVisibility
	0,  // 13: protobuf.ProfileShowcaseUnverifiedTokenPreference.showcase_visibility:type_name -> protobuf.ProfileShowcaseVisibility
	0,  // 14: protobuf.ProfileShowcaseSocialLinkPreference.showcase_visibility:type_name -> protobuf.ProfileShowcaseVisibility
	10, // 15: protobuf.SyncProfileShowcasePreferences.communities:type_name -> protobuf.ProfileShowcaseCommunityPreference
	11, // 16: protobuf.SyncProfileShowcasePreferences.accounts:type_name -> protobuf.ProfileShowcaseAccountPreference
	12, // 17: protobuf.SyncProfileShowcasePreferences.collectibles:type_name -> protobuf.ProfileShowcaseCollectiblePreference
	13, // 18: protobuf.SyncProfileShowcasePreferences.verified_tokens:type_name -> protobuf.ProfileShowcaseVerifiedTokenPreference
	14, // 19: protobuf.SyncProfileShowcasePreferences.unverified_tokens:type_name -> protobuf.ProfileShowcaseUnverifiedTokenPreference
	15, // 20: protobuf.SyncProfileShowcasePreferences.social_links:type_name -> protobuf.ProfileShowcaseSocialLinkPreference
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_profile_showcase_proto_init() }
func file_profile_showcase_proto_init() {
	if File_profile_showcase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_profile_showcase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseCommunity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseCollectible); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseVerifiedToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseUnverifiedToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseSocialLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseEntries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseEntriesEncrypted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseCommunityPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseAccountPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseCollectiblePreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseVerifiedTokenPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseUnverifiedTokenPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileShowcaseSocialLinkPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_profile_showcase_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncProfileShowcasePreferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_profile_showcase_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_profile_showcase_proto_goTypes,
		DependencyIndexes: file_profile_showcase_proto_depIdxs,
		EnumInfos:         file_profile_showcase_proto_enumTypes,
		MessageInfos:      file_profile_showcase_proto_msgTypes,
	}.Build()
	File_profile_showcase_proto = out.File
	file_profile_showcase_proto_rawDesc = nil
	file_profile_showcase_proto_goTypes = nil
	file_profile_showcase_proto_depIdxs = nil
}
