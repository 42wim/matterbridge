// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.20.3
// source: chat_identity.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SourceType are the predefined types of image source allowed
type IdentityImage_SourceType int32

const (
	IdentityImage_UNKNOWN_SOURCE_TYPE IdentityImage_SourceType = 0
	// RAW_PAYLOAD image byte data
	IdentityImage_RAW_PAYLOAD IdentityImage_SourceType = 1
	// ENS_AVATAR uses the ENS record's resolver get-text-data.avatar data
	// The `payload` field will be ignored if ENS_AVATAR is selected
	// The application will read and parse the ENS avatar data as image payload data, URLs will be ignored
	// The parent `ChatMessageIdentity` must have a valid `ens_name` set
	IdentityImage_ENS_AVATAR IdentityImage_SourceType = 2
)

// Enum value maps for IdentityImage_SourceType.
var (
	IdentityImage_SourceType_name = map[int32]string{
		0: "UNKNOWN_SOURCE_TYPE",
		1: "RAW_PAYLOAD",
		2: "ENS_AVATAR",
	}
	IdentityImage_SourceType_value = map[string]int32{
		"UNKNOWN_SOURCE_TYPE": 0,
		"RAW_PAYLOAD":         1,
		"ENS_AVATAR":          2,
	}
)

func (x IdentityImage_SourceType) Enum() *IdentityImage_SourceType {
	p := new(IdentityImage_SourceType)
	*p = x
	return p
}

func (x IdentityImage_SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityImage_SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_identity_proto_enumTypes[0].Descriptor()
}

func (IdentityImage_SourceType) Type() protoreflect.EnumType {
	return &file_chat_identity_proto_enumTypes[0]
}

func (x IdentityImage_SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityImage_SourceType.Descriptor instead.
func (IdentityImage_SourceType) EnumDescriptor() ([]byte, []int) {
	return file_chat_identity_proto_rawDescGZIP(), []int{1, 0}
}

// ChatIdentity represents the user defined identity associated with their public chat key
type ChatIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Lamport timestamp of the message
	Clock uint64 `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	// ens_name is the valid ENS name associated with the chat key
	EnsName string `protobuf:"bytes,2,opt,name=ens_name,json=ensName,proto3" json:"ens_name,omitempty"`
	// images is a string indexed mapping of images associated with an identity
	Images map[string]*IdentityImage `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// display name is the user set identity
	DisplayName string `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// description is the user set description
	Description string        `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Color       string        `protobuf:"bytes,6,opt,name=color,proto3" json:"color,omitempty"`
	Emoji       string        `protobuf:"bytes,7,opt,name=emoji,proto3" json:"emoji,omitempty"`
	SocialLinks []*SocialLink `protobuf:"bytes,8,rep,name=social_links,json=socialLinks,proto3" json:"social_links,omitempty"`
	// first known message timestamp in seconds (valid only for community chats for now)
	// 0 - unknown
	// 1 - no messages
	FirstMessageTimestamp uint32           `protobuf:"varint,9,opt,name=first_message_timestamp,json=firstMessageTimestamp,proto3" json:"first_message_timestamp,omitempty"`
	ProfileShowcase       *ProfileShowcase `protobuf:"bytes,10,opt,name=profile_showcase,json=profileShowcase,proto3" json:"profile_showcase,omitempty"`
}

func (x *ChatIdentity) Reset() {
	*x = ChatIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_identity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatIdentity) ProtoMessage() {}

func (x *ChatIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_chat_identity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatIdentity.ProtoReflect.Descriptor instead.
func (*ChatIdentity) Descriptor() ([]byte, []int) {
	return file_chat_identity_proto_rawDescGZIP(), []int{0}
}

func (x *ChatIdentity) GetClock() uint64 {
	if x != nil {
		return x.Clock
	}
	return 0
}

func (x *ChatIdentity) GetEnsName() string {
	if x != nil {
		return x.EnsName
	}
	return ""
}

func (x *ChatIdentity) GetImages() map[string]*IdentityImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ChatIdentity) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ChatIdentity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChatIdentity) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *ChatIdentity) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

func (x *ChatIdentity) GetSocialLinks() []*SocialLink {
	if x != nil {
		return x.SocialLinks
	}
	return nil
}

func (x *ChatIdentity) GetFirstMessageTimestamp() uint32 {
	if x != nil {
		return x.FirstMessageTimestamp
	}
	return 0
}

func (x *ChatIdentity) GetProfileShowcase() *ProfileShowcase {
	if x != nil {
		return x.ProfileShowcase
	}
	return nil
}

// ProfileImage represents data associated with a user's profile image
type IdentityImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// payload is a context based payload for the profile image data,
	// context is determined by the `source_type`
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// source_type signals the image payload source
	SourceType IdentityImage_SourceType `protobuf:"varint,2,opt,name=source_type,json=sourceType,proto3,enum=protobuf.IdentityImage_SourceType" json:"source_type,omitempty"`
	// image_format signals the image format and method of parsing the payload
	ImageFormat ImageFormat `protobuf:"varint,3,opt,name=image_format,json=imageFormat,proto3,enum=protobuf.ImageFormat" json:"image_format,omitempty"`
	// encryption_keys is a list of encrypted keys that can be used to decrypted an encrypted payload
	EncryptionKeys [][]byte `protobuf:"bytes,4,rep,name=encryption_keys,json=encryptionKeys,proto3" json:"encryption_keys,omitempty"`
	// encrypted signals the encryption state of the payload, default is false.
	Encrypted bool `protobuf:"varint,5,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
}

func (x *IdentityImage) Reset() {
	*x = IdentityImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_identity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityImage) ProtoMessage() {}

func (x *IdentityImage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_identity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityImage.ProtoReflect.Descriptor instead.
func (*IdentityImage) Descriptor() ([]byte, []int) {
	return file_chat_identity_proto_rawDescGZIP(), []int{1}
}

func (x *IdentityImage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *IdentityImage) GetSourceType() IdentityImage_SourceType {
	if x != nil {
		return x.SourceType
	}
	return IdentityImage_UNKNOWN_SOURCE_TYPE
}

func (x *IdentityImage) GetImageFormat() ImageFormat {
	if x != nil {
		return x.ImageFormat
	}
	return ImageFormat_UNKNOWN_IMAGE_FORMAT
}

func (x *IdentityImage) GetEncryptionKeys() [][]byte {
	if x != nil {
		return x.EncryptionKeys
	}
	return nil
}

func (x *IdentityImage) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

// SocialLinks represents social link assosiated with given chat identity (personal/community)
type SocialLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *SocialLink) Reset() {
	*x = SocialLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_identity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialLink) ProtoMessage() {}

func (x *SocialLink) ProtoReflect() protoreflect.Message {
	mi := &file_chat_identity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialLink.ProtoReflect.Descriptor instead.
func (*SocialLink) Descriptor() ([]byte, []int) {
	return file_chat_identity_proto_rawDescGZIP(), []int{2}
}

func (x *SocialLink) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SocialLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_chat_identity_proto protoreflect.FileDescriptor

var file_chat_identity_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x1a,
	0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7, 0x03, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x0b, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x36, 0x0a, 0x17,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x44, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x1a, 0x52, 0x0a, 0x0b, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb7,
	0x02, 0x0a, 0x0d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x43, 0x0a, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0b, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x22, 0x46, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x41, 0x57, 0x5f, 0x50,
	0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x53, 0x5f,
	0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x10, 0x02, 0x22, 0x32, 0x0a, 0x0a, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x42, 0x0d, 0x5a, 0x0b,
	0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_chat_identity_proto_rawDescOnce sync.Once
	file_chat_identity_proto_rawDescData = file_chat_identity_proto_rawDesc
)

func file_chat_identity_proto_rawDescGZIP() []byte {
	file_chat_identity_proto_rawDescOnce.Do(func() {
		file_chat_identity_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_identity_proto_rawDescData)
	})
	return file_chat_identity_proto_rawDescData
}

var file_chat_identity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chat_identity_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_chat_identity_proto_goTypes = []interface{}{
	(IdentityImage_SourceType)(0), // 0: protobuf.IdentityImage.SourceType
	(*ChatIdentity)(nil),          // 1: protobuf.ChatIdentity
	(*IdentityImage)(nil),         // 2: protobuf.IdentityImage
	(*SocialLink)(nil),            // 3: protobuf.SocialLink
	nil,                           // 4: protobuf.ChatIdentity.ImagesEntry
	(*ProfileShowcase)(nil),       // 5: protobuf.ProfileShowcase
	(ImageFormat)(0),              // 6: protobuf.ImageFormat
}
var file_chat_identity_proto_depIdxs = []int32{
	4, // 0: protobuf.ChatIdentity.images:type_name -> protobuf.ChatIdentity.ImagesEntry
	3, // 1: protobuf.ChatIdentity.social_links:type_name -> protobuf.SocialLink
	5, // 2: protobuf.ChatIdentity.profile_showcase:type_name -> protobuf.ProfileShowcase
	0, // 3: protobuf.IdentityImage.source_type:type_name -> protobuf.IdentityImage.SourceType
	6, // 4: protobuf.IdentityImage.image_format:type_name -> protobuf.ImageFormat
	2, // 5: protobuf.ChatIdentity.ImagesEntry.value:type_name -> protobuf.IdentityImage
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_chat_identity_proto_init() }
func file_chat_identity_proto_init() {
	if File_chat_identity_proto != nil {
		return
	}
	file_enums_proto_init()
	file_profile_showcase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chat_identity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_identity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_identity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_identity_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_identity_proto_goTypes,
		DependencyIndexes: file_chat_identity_proto_depIdxs,
		EnumInfos:         file_chat_identity_proto_enumTypes,
		MessageInfos:      file_chat_identity_proto_msgTypes,
	}.Build()
	File_chat_identity_proto = out.File
	file_chat_identity_proto_rawDesc = nil
	file_chat_identity_proto_goTypes = nil
	file_chat_identity_proto_depIdxs = nil
}
