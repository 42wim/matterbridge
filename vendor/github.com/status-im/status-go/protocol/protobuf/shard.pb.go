// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shard.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Shard struct {
	Cluster              int32    `protobuf:"varint,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shard) Reset()         { *m = Shard{} }
func (m *Shard) String() string { return proto.CompactTextString(m) }
func (*Shard) ProtoMessage()    {}
func (*Shard) Descriptor() ([]byte, []int) {
	return fileDescriptor_319ea41e44cdc364, []int{0}
}

func (m *Shard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shard.Unmarshal(m, b)
}
func (m *Shard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shard.Marshal(b, m, deterministic)
}
func (m *Shard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shard.Merge(m, src)
}
func (m *Shard) XXX_Size() int {
	return xxx_messageInfo_Shard.Size(m)
}
func (m *Shard) XXX_DiscardUnknown() {
	xxx_messageInfo_Shard.DiscardUnknown(m)
}

var xxx_messageInfo_Shard proto.InternalMessageInfo

func (m *Shard) GetCluster() int32 {
	if m != nil {
		return m.Cluster
	}
	return 0
}

func (m *Shard) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type PublicShardInfo struct {
	// clock
	Clock uint64 `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	// community ID
	CommunityId []byte `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	// shard information
	Shard *Shard `protobuf:"bytes,3,opt,name=shard,proto3" json:"shard,omitempty"`
	// if chainID > 0, the signer must be verified through the community contract
	ChainId              uint64   `protobuf:"varint,4,opt,name=chainId,proto3" json:"chainId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicShardInfo) Reset()         { *m = PublicShardInfo{} }
func (m *PublicShardInfo) String() string { return proto.CompactTextString(m) }
func (*PublicShardInfo) ProtoMessage()    {}
func (*PublicShardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_319ea41e44cdc364, []int{1}
}

func (m *PublicShardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicShardInfo.Unmarshal(m, b)
}
func (m *PublicShardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicShardInfo.Marshal(b, m, deterministic)
}
func (m *PublicShardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicShardInfo.Merge(m, src)
}
func (m *PublicShardInfo) XXX_Size() int {
	return xxx_messageInfo_PublicShardInfo.Size(m)
}
func (m *PublicShardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicShardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PublicShardInfo proto.InternalMessageInfo

func (m *PublicShardInfo) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *PublicShardInfo) GetCommunityId() []byte {
	if m != nil {
		return m.CommunityId
	}
	return nil
}

func (m *PublicShardInfo) GetShard() *Shard {
	if m != nil {
		return m.Shard
	}
	return nil
}

func (m *PublicShardInfo) GetChainId() uint64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

type CommunityPublicShardInfo struct {
	// Signature of the payload field
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// Marshaled PublicShardInfo
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommunityPublicShardInfo) Reset()         { *m = CommunityPublicShardInfo{} }
func (m *CommunityPublicShardInfo) String() string { return proto.CompactTextString(m) }
func (*CommunityPublicShardInfo) ProtoMessage()    {}
func (*CommunityPublicShardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_319ea41e44cdc364, []int{2}
}

func (m *CommunityPublicShardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunityPublicShardInfo.Unmarshal(m, b)
}
func (m *CommunityPublicShardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunityPublicShardInfo.Marshal(b, m, deterministic)
}
func (m *CommunityPublicShardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunityPublicShardInfo.Merge(m, src)
}
func (m *CommunityPublicShardInfo) XXX_Size() int {
	return xxx_messageInfo_CommunityPublicShardInfo.Size(m)
}
func (m *CommunityPublicShardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunityPublicShardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CommunityPublicShardInfo proto.InternalMessageInfo

func (m *CommunityPublicShardInfo) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *CommunityPublicShardInfo) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Shard)(nil), "protobuf.Shard")
	proto.RegisterType((*PublicShardInfo)(nil), "protobuf.PublicShardInfo")
	proto.RegisterType((*CommunityPublicShardInfo)(nil), "protobuf.CommunityPublicShardInfo")
}

func init() {
	proto.RegisterFile("shard.proto", fileDescriptor_319ea41e44cdc364)
}

var fileDescriptor_319ea41e44cdc364 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8e, 0x3d, 0x4f, 0x04, 0x21,
	0x10, 0x86, 0x83, 0x1e, 0x7e, 0x0c, 0x6b, 0x2e, 0x21, 0x16, 0x14, 0x16, 0xe7, 0x26, 0x26, 0x57,
	0x61, 0xa2, 0x85, 0x85, 0x9d, 0x56, 0xdb, 0x19, 0xec, 0x6c, 0x0c, 0x0b, 0x7b, 0x1e, 0x91, 0x83,
	0x0b, 0x0b, 0x89, 0xf7, 0x1b, 0xfc, 0xd3, 0x66, 0x67, 0x83, 0x26, 0x56, 0xf0, 0xbe, 0x03, 0xcf,
	0x3c, 0xc0, 0xc6, 0xad, 0x4e, 0x56, 0xee, 0x53, 0xcc, 0x91, 0x9f, 0xe1, 0xd1, 0x97, 0x4d, 0xfb,
	0x00, 0xf4, 0x75, 0x1a, 0x70, 0x01, 0xa7, 0xc6, 0x97, 0x31, 0x0f, 0x49, 0x90, 0x15, 0x59, 0x53,
	0x55, 0x23, 0xbf, 0x04, 0xea, 0x82, 0x1d, 0xbe, 0xc4, 0x11, 0xf6, 0x73, 0x68, 0xbf, 0x09, 0x2c,
	0x5f, 0x4a, 0xef, 0x9d, 0xc1, 0xff, 0x5d, 0xd8, 0xc4, 0xe9, 0xa5, 0xf1, 0xd1, 0x7c, 0x22, 0x61,
	0xa1, 0xe6, 0xc0, 0xaf, 0xa1, 0x31, 0x71, 0xb7, 0x2b, 0xc1, 0xe5, 0xc3, 0xbb, 0xb3, 0x88, 0x69,
	0x14, 0xfb, 0xed, 0x3a, 0xcb, 0x6f, 0x80, 0xa2, 0x9e, 0x38, 0x5e, 0x91, 0x35, 0xbb, 0x5b, 0xca,
	0xea, 0x27, 0x11, 0xae, 0xe6, 0x29, 0x3a, 0x6e, 0xb5, 0x0b, 0x9d, 0x15, 0x0b, 0xdc, 0x50, 0x63,
	0xab, 0x40, 0x3c, 0x57, 0xde, 0x7f, 0xab, 0x2b, 0x38, 0x1f, 0xdd, 0x47, 0xd0, 0xb9, 0xa4, 0x01,
	0xcd, 0x1a, 0xf5, 0x57, 0x4c, 0xcc, 0xbd, 0x3e, 0xf8, 0xa8, 0xab, 0x58, 0x8d, 0x4f, 0x17, 0x6f,
	0x4c, 0xde, 0x3e, 0x56, 0x93, 0xfe, 0x04, 0x6f, 0xf7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa5,
	0xbd, 0x3b, 0xd5, 0x49, 0x01, 0x00, 0x00,
}
